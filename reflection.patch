Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/ICasWorkerDomain.java
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/ICasWorkerDomain.java	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/ICasWorkerDomain.java	(revision d12621e4972a254150741b6f9937211cf785a774)
@@ -1,4 +0,0 @@
-package uk.gov.hmcts.reform.cwrdapi.client.domain;
-
-public interface ICasWorkerDomain {
-}
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/util/CaseWorkerConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/util/CaseWorkerConstants.java	(date 1605268675210)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/util/CaseWorkerConstants.java	(date 1605268675210)
@@ -0,0 +1,10 @@
+package uk.gov.hmcts.reform.cwrdapi.util;
+
+public class CaseWorkerConstants {
+
+   public static final String PARTIAL_SUCCESS = "PARTIAL SUCCESS";
+
+   public static final String SUCCESS = "SUCCESS";
+
+   public static final String FAILURE = "FAILURE";
+}
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/ServiceRoleMapping.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/ServiceRoleMapping.java	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/ServiceRoleMapping.java	(date 1605267904922)
@@ -10,7 +10,7 @@
 @Builder
 @Getter
 @Setter
-public class ServiceRoleMapping implements ICasWorkerDomain {
+public class ServiceRoleMapping extends CasWorkerDomain {
 
     @MappingField(columnName = "Service ID")
     @NotEmpty
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/service/AuditService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/service/AuditService.java	(date 1605291064748)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/service/AuditService.java	(date 1605291064748)
@@ -0,0 +1,49 @@
+package uk.gov.hmcts.reform.cwrdapi.service;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.jpa.repository.support.SimpleJpaRepository;
+import org.springframework.stereotype.Component;
+import uk.gov.hmcts.reform.cwrdapi.client.domain.CasWorkerDomain;
+import uk.gov.hmcts.reform.cwrdapi.domain.CaseWorkerAudit;
+import uk.gov.hmcts.reform.cwrdapi.domain.ExceptionCaseWorker;
+
+import java.util.List;
+import java.util.Set;
+
+import javax.validation.ConstraintViolation;
+
+@Component
+public class AuditService {
+
+    @Autowired
+    SimpleJpaRepository<CaseWorkerAudit, Long> repository;
+
+    @Autowired
+    SimpleJpaRepository<ExceptionCaseWorker,Long> exceptionCaseWorkerLongSimpleJpaRepository;
+
+    /**
+     * Capture and log scheduler details with file status.
+     * @param audit
+     * @return
+     */
+    public Long auditSchedulerStatus(CaseWorkerAudit audit) {
+       return repository.save(audit).getJobId();
+    }
+
+    /**
+     * Records JSR Exceptions in batches.
+     * @param exceptionCaseWorkers
+     */
+    public void auditException(Set<ConstraintViolation<CasWorkerDomain>> constraintViolationSet) {
+        constraintViolationSet.stream().map(s -> s.getRootBean());
+        //exceptionCaseWorkerLongSimpleJpaRepository.saveAll(exceptionCaseWorkers);
+    }
+
+    /**
+     * Records run time failures.
+     * @param exceptionCaseWorker
+     */
+    public void auditException(ExceptionCaseWorker exceptionCaseWorker) {
+        exceptionCaseWorkerLongSimpleJpaRepository.save(exceptionCaseWorker);
+    }
+}
Index: src/integrationTest/resources/application-test.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/integrationTest/resources/application-test.yml	(date 1605176151941)
+++ src/integrationTest/resources/application-test.yml	(date 1605176151941)
@@ -0,0 +1,62 @@
+spring:
+  flyway:
+    locations: classpath:db/migration,db/migrationAks
+  datasource:
+    driverClassName: org.h2.Driver
+    url: jdbc:h2:mem:locrefdata
+    platform: h2
+    username: ${POSTGRES_USERNAME:dbrdlocationref}
+    password: ${POSTGRES_PASSWORD:dbrdlocationref}
+  jpa:
+    show-sql: true
+    database-platform: org.hibernate.dialect.H2Dialect
+    hibernate:
+      ddl-auto: validate
+    properties:
+      hibernate:
+        enable_lazy_load_no_trans: true
+  main:
+    allow-bean-definition-overriding: true
+  security:
+    oauth2:
+      client:
+        provider:
+          oidc:
+            issuer-uri: ${OPEN_ID_API_BASE_URI:http://0.0.0.0:6000/o}
+        registration:
+          oidc:
+            client-id: microservicekey-rd-location-ref-api
+            client-secret: ${S2S_SECRET:AAAAAAAAAAAAAAAA}
+security:
+  anonymousPaths:
+    - "/"
+    - "/csrf"
+    - "/health"
+    - "/health/liveness"
+    - "/loggers/**"
+    - "/swagger-ui.html"
+    - "/swagger-resources/**"
+    - "/v2/api-docs"
+    - "/webjars/springfox-swagger-ui/**"
+    - "/favicon.ico"
+    - "/error"
+idam:
+  s2s-auth:
+    totp_secret: ${S2S_SECRET:AAAAAAAAAAAAAAAA}
+    microservice: rd_location_ref_api
+    url: ${S2S_URL:http://127.0.0.1:8990}
+  client:
+      redirect_uri: https://rd-location-ref-api-aat.service.core-compute-aat.internal/oauth2redirect
+      id: rd-location-ref-api
+
+  s2s-authorised:
+    services: ${LRD_S2S_AUTHORISED_SERVICES:rd_location_ref_api}
+  api:
+    url: ${IDAM_URL:http://127.0.0.1:5000}
+
+auth.idam.client.baseUrl: ${http://127.0.0.1:5000/o}
+oidc:
+  issuer: ${OIDC_ISSUER:http://127.0.0.1:5000/openam/oauth2/hmcts}
+  expiration: 14400000 # milliseconds 4 hours
+
+loggingComponentName: Rd_location_ref_api
Index: src/integrationTest/resources/db/migration/V1_1__init_tables.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/integrationTest/resources/db/migration/V1_1__init_tables.sql	(date 1605176151941)
+++ src/integrationTest/resources/db/migration/V1_1__init_tables.sql	(date 1605176151941)
@@ -0,0 +1,120 @@
+
+create schema if not exists dbrdcaseworker;
+
+create table case_worker_profile(
+	case_worker_id varchar(64),
+	first_name varchar(128),
+	last_name varchar(128),
+	email_id varchar(512) not null,
+	user_type_id int,
+	region varchar(64),
+	region_id integer not null,
+	delete_flag boolean,
+	delete_date timestamp,
+	created_date timestamp,
+	last_update timestamp,
+	constraint case_worker_profile_pk primary key (case_worker_id),
+	constraint email_id_unique unique (email_id)
+);
+
+create table case_worker_location(
+	case_worker_location_id serial,
+	case_worker_id varchar(64) not null,
+	location varchar(128),
+    location_id int not null,
+    primary_flag boolean,
+	created_date timestamp,
+	last_update timestamp,
+	constraint case_worker_location_pk primary key (case_worker_location_id),
+	constraint case_worker_locn_id_uq unique (case_worker_id,location_id)
+);
+
+
+
+create table case_worker_work_area(
+	case_worker_work_area_id serial,
+	case_worker_id varchar(64) not null,
+	area_of_work varchar(128) not null,
+    service_code varchar(16) not null,
+	created_date timestamp,
+	last_update timestamp,
+	constraint case_worker_work_area_pk primary key (case_worker_work_area_id),
+	constraint case_worker_work_area_uq unique (case_worker_id,service_code)
+);
+
+create table case_worker_role(
+	case_worker_role_id serial,
+	case_worker_id varchar(64) not null,
+	role_id int not null,
+	primary_flag boolean,
+	created_date timestamp,
+	last_update timestamp,
+	constraint case_worker_role_pk primary key (case_worker_role_id),
+	constraint case_worker_role_id_uq unique (case_worker_id,role_id)
+);
+
+create table role_type(
+	role_id int,
+	description varchar(512),
+	created_date timestamp,
+	last_update timestamp,
+	constraint role_id_pk primary key (role_id)
+);
+
+create table user_type(
+	user_type_id int,
+	description varchar(512),
+	created_date timestamp,
+	last_update timestamp,
+	constraint user_type_id_pk primary key (user_type_id)
+);
+
+create table case_worker_idam_role_assoc(
+    cw_idam_role_assoc_id serial,
+    role_id int not null,
+	service_code varchar(16) not null,
+	idam_role varchar(64) not null,
+	created_date timestamp,
+	last_update timestamp,
+	constraint cw_idam_role_assoc_id_pk primary key (cw_idam_role_assoc_id)
+);
+
+create table case_worker_audit (
+    job_id serial,
+    authenticated_user_id varchar(32),
+    job_start_time timestamp not null,
+    file_name varchar(64) not null,
+    job_end_time timestamp,
+    status varchar(32),
+    comments varchar(512),
+    constraint case_Worker_audit_pk primary key (job_id)
+);
+
+create table case_worker_exception (
+   id serial,
+   job_id bigint not null,
+   excel_row_id varchar(32),
+   email_id varchar(32),
+   field_in_error varchar(256),
+   error_description varchar(512),
+   updated_timestamp timestamp,
+   constraint case_worker_exception_pk primary key (id)
+);
+
+alter table case_worker_location add constraint case_worker_id_fk1 foreign key (case_worker_id)
+references case_worker_profile (case_worker_id);
+
+alter table case_worker_work_area add constraint case_worker_id_fk2 foreign key (case_worker_id)
+references case_worker_profile (case_worker_id);
+
+alter table case_worker_role add constraint case_worker_id_fk3 foreign key (case_worker_id)
+references case_worker_profile (case_worker_id);
+
+alter table case_worker_role add constraint role_id_fk1 foreign key (role_id)
+references role_type (role_id);
+
+alter table case_worker_idam_role_assoc add constraint role_id_fk2 foreign key (role_id)
+references role_type (role_id);
+
+alter table case_worker_exception add constraint job_id_fk1 foreign key (job_id)
+references case_worker_audit (job_id);
\ No newline at end of file
Index: src/integrationTest/resources/db/migration/V1_2__add_sequences.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/integrationTest/resources/db/migration/V1_2__add_sequences.sql	(date 1605176151941)
+++ src/integrationTest/resources/db/migration/V1_2__add_sequences.sql	(date 1605176151941)
@@ -0,0 +1,25 @@
+
+create sequence CASE_WORKER_LOCATION_ID_SEQ;
+create sequence CASE_WORKER_WORK_AREA_ID_SEQ;
+create sequence CASE_WORKER_ROLE_ID_SEQ;
+create sequence CW_IDAM_ROLE_ASSOC_ID_SEQ;
+create sequence JOB_ID_SEQ;
+create sequence EXCEPTION_ID_SEQ;
+
+ALTER TABLE case_worker_location ALTER COLUMN case_worker_location_id
+SET DEFAULT nextval('CASE_WORKER_LOCATION_ID_SEQ');
+
+ALTER TABLE case_worker_work_area ALTER COLUMN case_worker_work_area_id
+SET DEFAULT nextval('CASE_WORKER_WORK_AREA_ID_SEQ');
+
+ALTER TABLE case_worker_role ALTER COLUMN case_worker_role_id
+SET DEFAULT nextval('CASE_WORKER_ROLE_ID_SEQ');
+
+ALTER TABLE case_worker_idam_role_assoc ALTER COLUMN cw_idam_role_assoc_id
+SET DEFAULT nextval('CW_IDAM_ROLE_ASSOC_ID_SEQ');
+
+ALTER TABLE case_worker_audit ALTER COLUMN job_id
+SET DEFAULT nextval('JOB_ID_SEQ');
+
+ALTER TABLE case_worker_exception ALTER COLUMN id
+SET DEFAULT nextval('EXCEPTION_ID_SEQ');
Index: src/integrationTest/resources/db/migration/V1_3__insert_queries_role_user_type.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/integrationTest/resources/db/migration/V1_3__insert_queries_role_user_type.sql	(date 1605176151941)
+++ src/integrationTest/resources/db/migration/V1_3__insert_queries_role_user_type.sql	(date 1605176151941)
@@ -0,0 +1,7 @@
+-- insert queries for role_type table
+INSERT INTO role_type (role_id, description, created_date) VALUES (1, 'SENIOR_TRIBUNAL_CASEWORKER',timezone('utc', now()));
+INSERT INTO role_type (role_id, description, created_date) VALUES (2, 'TRIBUNAL_CASEWORKER',timezone('utc', now()));
+-- insert queries for user_type table
+INSERT INTO user_type (user_type_id, description, created_date) VALUES (1, 'CTSC',timezone('utc', now()));
+INSERT INTO user_type (user_type_id, description, created_date) VALUES (2, 'CTRT', timezone('utc', now()));
+INSERT INTO user_type (user_type_id, description, created_date) VALUES (3, 'Legal office', timezone('utc', now()));
\ No newline at end of file
Index: src/test/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeControllerTest.java	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/test/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeControllerTest.java	(date 1605176151945)
@@ -14,7 +14,7 @@
     private final WelcomeController welcomeController = new WelcomeController();
 
     @Test
-    public void test_should_return_welcome_response() {
+    public void test_should_return_welcome_response() throws Exception {
 
         ResponseEntity<String> responseEntity = welcomeController.welcome();
         String expectedMessage = "Message for the Caseworker Ref Data API";
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/config/RepositoryConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/config/RepositoryConfig.java	(date 1605279954142)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/config/RepositoryConfig.java	(date 1605279954142)
@@ -0,0 +1,27 @@
+package uk.gov.hmcts.reform.cwrdapi.config;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.jpa.repository.support.SimpleJpaRepository;
+import uk.gov.hmcts.reform.cwrdapi.domain.CaseWorkerAudit;
+import uk.gov.hmcts.reform.cwrdapi.domain.ExceptionCaseWorker;
+
+import javax.persistence.EntityManager;
+
+@Configuration
+public class RepositoryConfig {
+
+    @Autowired
+    EntityManager entityManager;
+
+    @Bean
+    public SimpleJpaRepository<CaseWorkerAudit, Long> getCaseWorkerAuditRepository() {
+        return new SimpleJpaRepository<>(CaseWorkerAudit.class, entityManager);
+    }
+
+    @Bean
+    public SimpleJpaRepository<ExceptionCaseWorker, Long> getExceptionCaseWorkerRepository() {
+        return new SimpleJpaRepository<>(ExceptionCaseWorker.class, entityManager);
+    }
+}
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/service/JsrValidatorInitializer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/service/JsrValidatorInitializer.java	(date 1605194816703)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/service/JsrValidatorInitializer.java	(date 1605194816703)
@@ -0,0 +1,63 @@
+package uk.gov.hmcts.reform.cwrdapi.service;
+
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.stereotype.Component;
+
+import java.util.ArrayList;
+import java.util.LinkedHashSet;
+import java.util.List;
+import java.util.Set;
+
+import javax.annotation.PostConstruct;
+import javax.validation.ConstraintViolation;
+import javax.validation.Validation;
+import javax.validation.Validator;
+import javax.validation.ValidatorFactory;
+
+@Component
+@Slf4j
+public class JsrValidatorInitializer<T> {
+
+    private Validator validator;
+
+    private Set<ConstraintViolation<T>> constraintViolations;
+
+    @Value("${logging-component-name}")
+    private String logComponentName;
+
+    @PostConstruct
+    public void initializeFactory() {
+        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
+        validator = factory.getValidator();
+    }
+
+    /**
+     * JSR validation.
+     *
+     * @param domains List
+     * @return List binder list
+     */
+    public List<T> getInvalidJsrRecords(List<T> domains) {
+
+        log.info("{}:: JsrValidatorInitializer data processing validate starts::", logComponentName);
+        this.constraintViolations = new LinkedHashSet<>();
+        List<T> invalidList = new ArrayList<>();
+        domains.forEach(domain -> {
+            Set<ConstraintViolation<T>> constraintViolations = validator.validate(domain);
+            if (constraintViolations.size() > 0) {
+                invalidList.add(domain);
+            }
+            this.constraintViolations.addAll(constraintViolations);
+        });
+
+        log.info("{}:: JsrValidatorInitializer data processing validate complete::", logComponentName);
+        return invalidList;
+    }
+
+    public Set<ConstraintViolation<T>> getConstraintViolations() {
+        return constraintViolations;
+    }
+
+}
+
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/CasWorkerDomain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/CasWorkerDomain.java	(date 1605268675219)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/CasWorkerDomain.java	(date 1605268675219)
@@ -0,0 +1,5 @@
+package uk.gov.hmcts.reform.cwrdapi.client.domain;
+
+public abstract class CasWorkerDomain {
+    protected long rowId;
+}
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/service/ValidationService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/service/ValidationService.java	(date 1605280192237)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/service/ValidationService.java	(date 1605280192237)
@@ -0,0 +1,60 @@
+package uk.gov.hmcts.reform.cwrdapi.service;
+
+import org.apache.commons.lang3.tuple.ImmutablePair;
+import org.apache.commons.lang3.tuple.Pair;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Component;
+import uk.gov.hmcts.reform.cwrdapi.client.domain.CasWorkerDomain;
+import uk.gov.hmcts.reform.cwrdapi.domain.CaseWorkerAudit;
+
+import java.time.LocalDateTime;
+import java.util.List;
+import java.util.Set;
+
+import javax.validation.ConstraintViolation;
+
+import static java.util.stream.Collectors.toList;
+import static uk.gov.hmcts.reform.cwrdapi.util.CaseWorkerConstants.PARTIAL_SUCCESS;
+
+@Component
+public class ValidationService {
+
+    @Autowired
+    JsrValidatorInitializer<CasWorkerDomain> jsrValidatorInitializer;
+
+    @Autowired
+    AuditService auditService;
+
+    /***
+     * Returns invalid record list and JSR Constraint violations pair.
+     * @param caseWorkerProfileList
+     * @param fileName
+     * @param jobId
+     * @return
+     * @throws Exception
+     */
+    public Pair<List<CasWorkerDomain>,  Set<ConstraintViolation<CasWorkerDomain>>> getInvalidRecordsWithJsrConstraints
+        (List<CasWorkerDomain> caseWorkerProfileList, String fileName, long jobId )
+        throws Exception {
+
+        //Gets Invalid records
+        List<CasWorkerDomain> invalidRecords = jsrValidatorInitializer.getInvalidJsrRecords(caseWorkerProfileList);
+        Set<ConstraintViolation<CasWorkerDomain>> constraintViolationSet
+            = jsrValidatorInitializer.getConstraintViolations();
+
+        Pair<List<CasWorkerDomain>,  Set<ConstraintViolation<CasWorkerDomain>>> pair =
+            new ImmutablePair<>(invalidRecords, constraintViolationSet);
+
+        CaseWorkerAudit caseWorkerAudit = CaseWorkerAudit.builder()
+            .fileName(fileName)
+            //.jobId(jobId)
+            .jobStartTime(LocalDateTime.now())
+            .status(PARTIAL_SUCCESS).build();
+        //Audit Invalid Records & Update Job status to Partial success
+        auditService.auditSchedulerStatus(caseWorkerAudit);
+
+
+
+        return pair;
+    }
+}
Index: src/test/java/uk/gov/hmcts/reform/cwrdapi/TestSupport.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/uk/gov/hmcts/reform/cwrdapi/TestSupport.java	(date 1605182653493)
+++ src/test/java/uk/gov/hmcts/reform/cwrdapi/TestSupport.java	(date 1605182653493)
@@ -0,0 +1,38 @@
+package uk.gov.hmcts.reform.cwrdapi;
+
+import com.google.common.collect.ImmutableList;
+import uk.gov.hmcts.reform.cwrdapi.client.domain.CaseWorkerProfile;
+import uk.gov.hmcts.reform.cwrdapi.client.domain.Location;
+import uk.gov.hmcts.reform.cwrdapi.client.domain.Role;
+import uk.gov.hmcts.reform.cwrdapi.client.domain.WorkArea;
+
+import java.util.List;
+
+public class TestSupport {
+
+    public static List<CaseWorkerProfile> buildCaseWorkerProfileData() {
+
+        ImmutableList<Location> locations = ImmutableList.of
+            (Location.builder().baseLocationId(1)
+                .primaryBaseLocationName("1").isPrimary(true).build());
+
+        ImmutableList<WorkArea> workAreas = ImmutableList.of
+            (WorkArea.builder().serviceCode("AAA1").areaOfWork("area1").build());
+
+
+        ImmutableList<Role> roles = ImmutableList.of
+            (Role.builder().isPrimary(true)
+                .primaryRoleName("rl1").build());
+
+        return ImmutableList.of(CaseWorkerProfile.builder().
+            firstName("test").lastName("test")
+            .officialEmail("test@test.com")
+            .regionId(1)
+            .regionName("test")
+            .userType("testUser")
+            .workAreas(workAreas)
+            .locations(locations)
+            .roles(roles)
+            .build());
+    }
+}
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/domain/CaseWorkerAudit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/domain/CaseWorkerAudit.java	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/domain/CaseWorkerAudit.java	(date 1605271903035)
@@ -1,40 +1,37 @@
 package uk.gov.hmcts.reform.cwrdapi.domain;
 
+import lombok.AllArgsConstructor;
+import lombok.Builder;
 import lombok.Getter;
 import lombok.NoArgsConstructor;
 import lombok.Setter;
 import org.hibernate.annotations.Fetch;
 import org.hibernate.annotations.FetchMode;
-import org.springframework.data.jpa.domain.support.AuditingEntityListener;
 
 import java.io.Serializable;
 import java.time.LocalDateTime;
 import java.util.ArrayList;
 import java.util.List;
+
 import javax.persistence.Column;
 import javax.persistence.Entity;
-import javax.persistence.EntityListeners;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
 import javax.persistence.Id;
-import javax.persistence.NamedAttributeNode;
-import javax.persistence.NamedEntityGraph;
 import javax.persistence.OneToMany;
 import javax.validation.constraints.Size;
 
 @Entity(name = "case_worker_audit")
 @Getter
 @Setter
+@Builder
 @NoArgsConstructor
-@EntityListeners(AuditingEntityListener.class)
-@NamedEntityGraph(
-        name = "CaseWorkerAudit.alljoins",
-        attributeNodes = {
-                @NamedAttributeNode(value = "exceptionCaseWorkers")
-        }
-)
+@AllArgsConstructor
 public class CaseWorkerAudit implements Serializable {
 
     @Id
     @Column(name = "job_id")
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
     private Long jobId;
 
     @Column(name = "authenticated_user_id")
@@ -61,6 +58,6 @@
 
     @Fetch(FetchMode.SUBSELECT)
     @OneToMany(targetEntity = ExceptionCaseWorker.class, mappedBy = "caseWorkerAudit")
-    private List<ExceptionCaseWorker> exceptionCaseWorkers = new ArrayList<>();
+    private List<ExceptionCaseWorker> exceptionCaseWorkers;
 
 }
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/domain/ExceptionCaseWorker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/domain/ExceptionCaseWorker.java	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/domain/ExceptionCaseWorker.java	(date 1605268095175)
@@ -21,7 +21,6 @@
 @Getter
 @Setter
 @NoArgsConstructor
-@EntityListeners(AuditingEntityListener.class)
 public class ExceptionCaseWorker implements Serializable {
 
     @Id
Index: src/test/java/uk/gov/hmcts/reform/cwrdapi/domain/ExceptionCaseWorkerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/uk/gov/hmcts/reform/cwrdapi/domain/ExceptionCaseWorkerTest.java	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/test/java/uk/gov/hmcts/reform/cwrdapi/domain/ExceptionCaseWorkerTest.java	(date 1605269937424)
@@ -33,13 +33,9 @@
 
     @Test
     public void testCaseWorkerContainingAudit() {
-        CaseWorkerAudit caseWorkerAudit = new CaseWorkerAudit();
-        caseWorkerAudit.setJobId(1L);
-
+        CaseWorkerAudit caseWorkerAudit = CaseWorkerAudit.builder().jobId(1L).build();
         ExceptionCaseWorker exceptionCaseWorker = new ExceptionCaseWorker();
         exceptionCaseWorker.setCaseWorkerAudit(caseWorkerAudit);
-
         assertNotNull(exceptionCaseWorker.getCaseWorkerAudit());
-
     }
 }
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ build.gradle	(date 1605306200203)
@@ -315,6 +315,8 @@
 
   testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
 
+// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
+  compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.9'
 
   integrationTestCompile sourceSets.main.runtimeClasspath
   integrationTestCompile sourceSets.test.runtimeClasspath
Index: src/test/java/uk/gov/hmcts/reform/cwrdapi/service/JsrValidatorInitializerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/uk/gov/hmcts/reform/cwrdapi/service/JsrValidatorInitializerTest.java	(date 1605183294252)
+++ src/test/java/uk/gov/hmcts/reform/cwrdapi/service/JsrValidatorInitializerTest.java	(date 1605183294252)
@@ -0,0 +1,47 @@
+package uk.gov.hmcts.reform.cwrdapi.service;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.mockito.InjectMocks;
+import org.mockito.Spy;
+import uk.gov.hmcts.reform.cwrdapi.client.domain.CaseWorkerProfile;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static org.junit.Assert.assertEquals;
+import static org.mockito.Mockito.times;
+import static org.mockito.MockitoAnnotations.openMocks;
+import static uk.gov.hmcts.reform.cwrdapi.TestSupport.buildCaseWorkerProfileData;
+import static org.mockito.Mockito.verify;
+
+public class JsrValidatorInitializerTest {
+
+    @Spy
+    @InjectMocks
+    JsrValidatorInitializer<CaseWorkerProfile> jsrValidatorInitializer;
+
+    @Before
+    public void init() {
+        openMocks(this);
+        jsrValidatorInitializer.initializeFactory();
+    }
+
+    @Test
+    public void testGetNoInvalidJsrRecords() {
+        List<CaseWorkerProfile> caseWorkerProfiles = buildCaseWorkerProfileData();
+        List<CaseWorkerProfile> records = jsrValidatorInitializer.getInvalidJsrRecords(caseWorkerProfiles);
+        assertEquals(records.size(), 0);
+        verify(jsrValidatorInitializer).getInvalidJsrRecords(caseWorkerProfiles);
+    }
+
+    @Test
+    public void testGetInvalidJsrRecords() {
+        List<CaseWorkerProfile> caseWorkerProfiles = new ArrayList<>();
+        CaseWorkerProfile profile =  CaseWorkerProfile.builder().build();
+        caseWorkerProfiles.add(profile);
+        List<CaseWorkerProfile> records = jsrValidatorInitializer.getInvalidJsrRecords(caseWorkerProfiles);
+        assertEquals(records.size(), 1);
+        verify(jsrValidatorInitializer).getInvalidJsrRecords(caseWorkerProfiles);
+    }
+}
Index: src/main/resources/application.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/application.yaml	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/main/resources/application.yaml	(date 1605184496467)
@@ -21,6 +21,8 @@
         jdbc:
           lob:
             non_contextual_creation: true
+          batch_size: 10
+
   application:
     name: RD Caseworker Ref API
   security:
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/service/TestMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/service/TestMain.java	(date 1605524464175)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/service/TestMain.java	(date 1605524464175)
@@ -0,0 +1,145 @@
+package uk.gov.hmcts.reform.cwrdapi.service;
+
+import com.google.common.collect.ImmutableList;
+import org.apache.commons.lang3.tuple.ImmutableTriple;
+import org.apache.commons.lang3.tuple.Triple;
+import org.apache.poi.ss.usermodel.Cell;
+import org.apache.poi.ss.usermodel.Row;
+import org.apache.poi.xssf.usermodel.XSSFSheet;
+import org.apache.poi.xssf.usermodel.XSSFWorkbook;
+import org.springframework.core.annotation.AnnotationUtils;
+import uk.gov.hmcts.reform.cwrdapi.client.domain.CaseWorkerProfile;
+import uk.gov.hmcts.reform.cwrdapi.util.MappingField;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.lang.reflect.Field;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.stream.Collectors;
+
+import static java.lang.Boolean.TRUE;
+
+public class TestMain {
+
+    static Field[] fields = CaseWorkerProfile.class.getDeclaredFields();
+    static List<Triple<Field, Integer, Map<String,Field>>> childes = getChildFields();
+
+    public static void main(String[] args) throws Exception {
+        File file = new File("/Users/350950/HMCTS/rd-caseworker-ref-api/src/main/java/uk/gov/hmcts/reform/cwrdapi/service/Caseworker User Pofile_Final draft MVP.xlsx");   //creating a new file instance
+        FileInputStream fis = new FileInputStream(file);   //obtaining bytes from the file
+        XSSFWorkbook wb = new XSSFWorkbook(fis);
+        XSSFSheet sheet = wb.getSheet("Case Worker Data");
+        System.out.println(sheet);
+        Iterator<Row> itr = sheet.iterator();
+
+        List<String> headers = new ArrayList<>();
+        List<Triple<Integer, String, Field>> triples = new ArrayList<>();
+
+        if (itr.hasNext()) {
+            Row row = itr.next();
+            List<Cell> cell = ImmutableList.copyOf(row.cellIterator());
+            headers = cell.stream().map(s -> s.getStringCellValue()).collect(Collectors.toList());
+            triples = populateHeaders(headers);
+        }
+
+        //iterating over excel file
+        while (itr.hasNext()) {
+            Row row = itr.next();
+            setColumnValues(triples, row, new ArrayList<>());
+        }
+    }
+
+    public static List<Triple<Integer, String, Field>> populateHeaders(List<String> headers) {
+        List<Triple<Integer, String, Field>> triples = new ArrayList<>();
+        int counter = 0;
+
+        for (String headerName : headers) {
+            boolean flagMatched = false;
+            Field listChildField = null;
+            for (Field field : fields) {
+                field.setAccessible(true);
+
+                if (AnnotationUtils.findAnnotation(field, MappingField.class)
+                    .columnName() != null &&
+                    AnnotationUtils.findAnnotation(field, MappingField.class).columnName()
+                        .equalsIgnoreCase(headerName.trim())) {
+                    triples.add(ImmutableTriple.of(counter, headerName, field));
+                    flagMatched = true;
+                    break;
+                } else if(AnnotationUtils.findAnnotation(field, MappingField.class).childes() != null
+                    && Arrays.asList(AnnotationUtils.findAnnotation(field, MappingField.class)
+                    .childes()).stream().anyMatch(s-> s.equalsIgnoreCase(headerName.trim()))) {
+                    listChildField = field;
+                }
+            }
+            if(!flagMatched) {
+                triples.add(ImmutableTriple.of(counter, headerName, listChildField));
+            }
+
+            counter = counter++;
+        }
+        return triples;
+    }
+
+
+
+    public static void setColumnValues(List<Triple<Integer, String, Field>> triples, Row row,
+                                       List<Triple<String, String, Field>> objectVls) throws Exception {
+        Iterator<Cell> cellIterator = row.cellIterator();
+
+        int counter = 0;
+        CaseWorkerProfile profile = CaseWorkerProfile.builder().build();
+        while (cellIterator.hasNext()) {
+            Cell cell = cellIterator.next();
+            Triple<Integer, String, Field> column = triples.get(counter);
+            Field field = column.getRight();
+            if (field != null && field.getType() != List.class) {
+                field.setAccessible(TRUE);
+                field.set(profile, cell.getStringCellValue());
+            } else {
+                String header = column.getMiddle();
+                objectVls.add(ImmutableTriple.of(header, cell.getStringCellValue(),field));
+            }
+            counter = counter + 1;
+        }
+        setChild(objectVls,profile);
+    }
+
+
+    public static void setChild(List<Triple<String, String, Field>> objectVls, CaseWorkerProfile profile) {
+       Map<Field, List<Triple<String, String, Field>>> li = objectVls
+            .stream()
+            .collect(Collectors.groupingBy(s -> s.getRight()));
+
+       for(Map.Entry<Field, List<Triple<String, String, Field>>> entry: li.entrySet()) {
+
+       }
+    }
+
+    public static List<Triple<Field, Integer, Map<String,Field>>> getChildFields() {
+        List<Triple<Field, Integer, Map<String,Field>>> childes = new ArrayList<>();
+        Arrays.stream(fields).filter(s -> AnnotationUtils.findAnnotation(s, MappingField.class)
+            .clazz() != null && s.getType().equals(List.class))
+            .forEach( s -> {
+                Map<String,Field> map = new HashMap<>();
+                int noOfCollectionProperties = AnnotationUtils.findAnnotation(s, MappingField.class)
+                    .noOfCollectionProperties();
+                Arrays.stream(AnnotationUtils.findAnnotation(s, MappingField.class)
+                    .clazz().getDeclaredFields()).filter(t -> AnnotationUtils.findAnnotation(t, MappingField.class)
+                        .columnName() != null).forEach( u -> {
+                    map.put(u.getAnnotation(MappingField.class).columnName(),u);
+                });
+
+                Triple<Field, Integer, Map<String,Field>> triple = Triple.of(s,
+                    noOfCollectionProperties, map);
+                childes.add(triple);
+        });
+
+        return childes;
+    }
+}
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/repository/ServiceRepositoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/repository/ServiceRepositoryImpl.java	(date 1605194345541)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/repository/ServiceRepositoryImpl.java	(date 1605194345541)
@@ -0,0 +1,27 @@
+package uk.gov.hmcts.reform.cwrdapi.repository;
+
+import org.hibernate.Session;
+import org.springframework.data.jpa.repository.support.SimpleJpaRepository;
+import uk.gov.hmcts.reform.cwrdapi.domain.ExceptionCaseWorker;
+
+import java.io.Serializable;
+import java.util.List;
+
+import javax.persistence.EntityManager;
+
+public class ServiceRepositoryImpl<T, ID extends Serializable>
+    extends SimpleJpaRepository<T, ID>  implements BaseRepository<T, ID>  {
+
+    private EntityManager em;
+
+    public ServiceRepositoryImpl(Class<T> domainClass,
+                                 EntityManager entityManager) {
+        super(domainClass, entityManager);
+    }
+
+    public void saveAllInBatch(List<ExceptionCaseWorker> entities, int batchSize) {
+        Session session = em.unwrap(Session.class);
+        session.setJdbcBatchSize(batchSize);
+        em.persist(entities);
+    }
+}
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/repository/BaseRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/repository/BaseRepository.java	(date 1605193254450)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/repository/BaseRepository.java	(date 1605193254450)
@@ -0,0 +1,12 @@
+package uk.gov.hmcts.reform.cwrdapi.repository;
+
+import org.springframework.data.repository.NoRepositoryBean;
+import org.springframework.data.repository.Repository;
+;
+
+import java.io.Serializable;
+
+@NoRepositoryBean
+public interface BaseRepository <T, ID extends Serializable> extends Repository<T, ID> {
+
+}
Index: RDCC-1927.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- RDCC-1927.patch	(date 1605176120594)
+++ RDCC-1927.patch	(date 1605176120594)
@@ -0,0 +1,526 @@
+Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/service/JsrValidatorInitializer.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/main/java/uk/gov/hmcts/reform/cwrdapi/service/JsrValidatorInitializer.java	(date 1605098785527)
++++ src/main/java/uk/gov/hmcts/reform/cwrdapi/service/JsrValidatorInitializer.java	(date 1605098785527)
+@@ -0,0 +1,58 @@
++package uk.gov.hmcts.reform.cwrdapi.service;
++
++import lombok.extern.slf4j.Slf4j;
++import org.springframework.beans.factory.annotation.Value;
++import org.springframework.stereotype.Component;
++
++import java.util.ArrayList;
++import java.util.LinkedHashSet;
++import java.util.List;
++import java.util.Set;
++
++import javax.annotation.PostConstruct;
++import javax.validation.ConstraintViolation;
++import javax.validation.Validation;
++import javax.validation.Validator;
++import javax.validation.ValidatorFactory;
++
++@Component
++@Slf4j
++public class JsrValidatorInitializer<T> {
++
++    private Validator validator;
++
++    private Set<ConstraintViolation<T>> constraintViolations;
++
++    @Value("${logging-component-name}")
++    private String logComponentName;
++
++    @PostConstruct
++    public void initializeFactory() {
++        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
++        validator = factory.getValidator();
++    }
++
++    /**
++     * JSR validation.
++     *
++     * @param domains List
++     * @return List binder list
++     */
++    public List<T> getInvalidJsrRecords(List<T> domains) {
++
++        log.info("{}:: JsrValidatorInitializer data processing validate starts::", logComponentName);
++        this.constraintViolations = new LinkedHashSet<>();
++        List<T> invalidList = new ArrayList<>();
++        domains.forEach(domain -> {
++            Set<ConstraintViolation<T>> constraintViolations = validator.validate(domain);
++            if (constraintViolations.size() > 0) {
++                invalidList.add(domain);
++            }
++            this.constraintViolations.addAll(constraintViolations);
++        });
++
++        log.info("{}:: JsrValidatorInitializer data processing validate complete::", logComponentName);
++        return invalidList;
++    }
++}
++
+Index: src/test/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeControllerTest.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/test/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeControllerTest.java	(revision 5b2feb73e19017ab8fafd7377dbfdc82c149bc26)
++++ src/test/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeControllerTest.java	(date 1605096677673)
+@@ -14,7 +14,7 @@
+     private final WelcomeController welcomeController = new WelcomeController();
+ 
+     @Test
+-    public void test_should_return_welcome_response() {
++    public void test_should_return_welcome_response() throws Exception {
+ 
+         ResponseEntity<String> responseEntity = welcomeController.welcome();
+         String expectedMessage = "Message for the Caseworker Ref Data API";
+Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/config/SecurityConfiguration.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/main/java/uk/gov/hmcts/reform/cwrdapi/config/SecurityConfiguration.java	(revision 5b2feb73e19017ab8fafd7377dbfdc82c149bc26)
++++ src/main/java/uk/gov/hmcts/reform/cwrdapi/config/SecurityConfiguration.java	(date 1605097912311)
+@@ -30,7 +30,7 @@
+ 
+ @Configuration
+ @ConfigurationProperties(prefix = "security")
+-@EnableWebSecurity
++//@EnableWebSecurity
+ @Slf4j
+ @SuppressWarnings("unchecked")
+ public class SecurityConfiguration extends WebSecurityConfigurerAdapter {
+@@ -74,23 +74,23 @@
+ 
+     @Override
+     protected void configure(final HttpSecurity http) throws Exception {
+-        http
+-           .addFilterBefore(serviceAuthFilter, BearerTokenAuthenticationFilter.class)
+-           .sessionManagement().sessionCreationPolicy(STATELESS).and()
+-           .csrf().disable()
+-           .formLogin().disable()
+-           .logout().disable()
+-           .authorizeRequests()
+-           .antMatchers("/error").permitAll()
+-           .anyRequest()
+-           .authenticated()
+-           .and()
+-           .oauth2ResourceServer()
+-           .jwt()
+-           .jwtAuthenticationConverter(jwtAuthenticationConverter)
+-           .and()
+-           .and()
+-            .oauth2Client();
++//        http
++//           .addFilterBefore(serviceAuthFilter, BearerTokenAuthenticationFilter.class)
++//           .sessionManagement().sessionCreationPolicy(STATELESS).and()
++//           .csrf().disable()
++//           .formLogin().disable()
++//           .logout().disable()
++//           .authorizeRequests()
++//           .antMatchers("/error").permitAll()
++//           .anyRequest()
++//           .authenticated()
++//           .and()
++//           .oauth2ResourceServer()
++//           .jwt()
++//           .jwtAuthenticationConverter(jwtAuthenticationConverter)
++//           .and()
++//           .and()
++//            .oauth2Client();
+     }
+ 
+     @Bean
+Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/service/ValidationService.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/main/java/uk/gov/hmcts/reform/cwrdapi/service/ValidationService.java	(date 1605114008265)
++++ src/main/java/uk/gov/hmcts/reform/cwrdapi/service/ValidationService.java	(date 1605114008265)
+@@ -0,0 +1,19 @@
++package uk.gov.hmcts.reform.cwrdapi.service;
++
++import org.springframework.beans.factory.annotation.Autowired;
++import org.springframework.stereotype.Component;
++import uk.gov.hmcts.reform.cwrdapi.client.domain.ICasWorkerDomain;
++
++import java.util.List;
++
++@Component
++public class ValidationService {
++
++    @Autowired
++    JsrValidatorInitializer<ICasWorkerDomain> jsrValidatorInitializer;
++
++    public void validate(List<ICasWorkerDomain> caseWorkerProfileList) throws Exception {
++        //Gets Invalid records
++        List<ICasWorkerDomain> invalidRecords = jsrValidatorInitializer.getInvalidJsrRecords(caseWorkerProfileList);
++    }
++}
+Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/main/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeController.java	(revision 5b2feb73e19017ab8fafd7377dbfdc82c149bc26)
++++ src/main/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeController.java	(date 1605096585208)
+@@ -4,6 +4,7 @@
+ import io.swagger.annotations.ApiResponse;
+ import io.swagger.annotations.ApiResponses;
+ import lombok.extern.slf4j.Slf4j;
++import org.springframework.beans.factory.annotation.Autowired;
+ import org.springframework.beans.factory.annotation.Value;
+ import org.springframework.http.CacheControl;
+ import org.springframework.http.ResponseEntity;
+@@ -11,6 +12,12 @@
+ import org.springframework.web.bind.annotation.ResponseBody;
+ import org.springframework.web.bind.annotation.RestController;
+ 
++import uk.gov.hmcts.reform.cwrdapi.client.domain.CaseWorkerProfile;
++import uk.gov.hmcts.reform.cwrdapi.client.domain.ICasWorkerDomain;
++import uk.gov.hmcts.reform.cwrdapi.service.ValidationService;
++
++import java.util.ArrayList;
++import java.util.List;
+ import java.util.UUID;
+ 
+ import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;
+@@ -29,6 +36,9 @@
+     private static final String INSTANCE_ID = UUID.randomUUID().toString();
+     private static final String MESSAGE = "Message for the Caseworker Ref Data API";
+ 
++    @Autowired
++    ValidationService validationService;
++
+ 
+     /**
+      * Root GET endpoint.
+@@ -49,14 +59,18 @@
+         )
+     })
+     @GetMapping(
+-        path = "/",
++        path = "/test",
+         produces = APPLICATION_JSON_VALUE
+     )
+     @ResponseBody
+-    public ResponseEntity<String> welcome() {
++    public ResponseEntity<String> welcome() throws Exception {
+ 
+         log.info("{}:: Welcome '{}' from running instance: {}", loggingComponentName, MESSAGE, INSTANCE_ID);
+ 
++        CaseWorkerProfile profile = CaseWorkerProfile.builder().build();
++        List<ICasWorkerDomain> caseWorkerProfileList = new ArrayList<>();
++        caseWorkerProfileList.add(profile);
++        validationService.validate(caseWorkerProfileList);
+         return ResponseEntity
+             .ok()
+             .cacheControl(CacheControl.noCache())
+Index: src/integrationTest/resources/db/migration/V1_1__init_tables.sql
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/integrationTest/resources/db/migration/V1_1__init_tables.sql	(date 1605006955851)
++++ src/integrationTest/resources/db/migration/V1_1__init_tables.sql	(date 1605006955851)
+@@ -0,0 +1,120 @@
++
++create schema if not exists dbrdcaseworker;
++
++create table case_worker_profile(
++	case_worker_id varchar(64),
++	first_name varchar(128),
++	last_name varchar(128),
++	email_id varchar(512) not null,
++	user_type_id int,
++	region varchar(64),
++	region_id integer not null,
++	delete_flag boolean,
++	delete_date timestamp,
++	created_date timestamp,
++	last_update timestamp,
++	constraint case_worker_profile_pk primary key (case_worker_id),
++	constraint email_id_unique unique (email_id)
++);
++
++create table case_worker_location(
++	case_worker_location_id serial,
++	case_worker_id varchar(64) not null,
++	location varchar(128),
++    location_id int not null,
++    primary_flag boolean,
++	created_date timestamp,
++	last_update timestamp,
++	constraint case_worker_location_pk primary key (case_worker_location_id),
++	constraint case_worker_locn_id_uq unique (case_worker_id,location_id)
++);
++
++
++
++create table case_worker_work_area(
++	case_worker_work_area_id serial,
++	case_worker_id varchar(64) not null,
++	area_of_work varchar(128) not null,
++    service_code varchar(16) not null,
++	created_date timestamp,
++	last_update timestamp,
++	constraint case_worker_work_area_pk primary key (case_worker_work_area_id),
++	constraint case_worker_work_area_uq unique (case_worker_id,service_code)
++);
++
++create table case_worker_role(
++	case_worker_role_id serial,
++	case_worker_id varchar(64) not null,
++	role_id int not null,
++	primary_flag boolean,
++	created_date timestamp,
++	last_update timestamp,
++	constraint case_worker_role_pk primary key (case_worker_role_id),
++	constraint case_worker_role_id_uq unique (case_worker_id,role_id)
++);
++
++create table role_type(
++	role_id int,
++	description varchar(512),
++	created_date timestamp,
++	last_update timestamp,
++	constraint role_id_pk primary key (role_id)
++);
++
++create table user_type(
++	user_type_id int,
++	description varchar(512),
++	created_date timestamp,
++	last_update timestamp,
++	constraint user_type_id_pk primary key (user_type_id)
++);
++
++create table case_worker_idam_role_assoc(
++    cw_idam_role_assoc_id serial,
++    role_id int not null,
++	service_code varchar(16) not null,
++	idam_role varchar(64) not null,
++	created_date timestamp,
++	last_update timestamp,
++	constraint cw_idam_role_assoc_id_pk primary key (cw_idam_role_assoc_id)
++);
++
++create table case_worker_audit (
++    job_id serial,
++    authenticated_user_id varchar(32),
++    job_start_time timestamp not null,
++    file_name varchar(64) not null,
++    job_end_time timestamp,
++    status varchar(32),
++    comments varchar(512),
++    constraint case_Worker_audit_pk primary key (job_id)
++);
++
++create table case_worker_exception (
++   id serial,
++   job_id bigint not null,
++   excel_row_id varchar(32),
++   email_id varchar(32),
++   field_in_error varchar(256),
++   error_description varchar(512),
++   updated_timestamp timestamp,
++   constraint case_worker_exception_pk primary key (id)
++);
++
++alter table case_worker_location add constraint case_worker_id_fk1 foreign key (case_worker_id)
++references case_worker_profile (case_worker_id);
++
++alter table case_worker_work_area add constraint case_worker_id_fk2 foreign key (case_worker_id)
++references case_worker_profile (case_worker_id);
++
++alter table case_worker_role add constraint case_worker_id_fk3 foreign key (case_worker_id)
++references case_worker_profile (case_worker_id);
++
++alter table case_worker_role add constraint role_id_fk1 foreign key (role_id)
++references role_type (role_id);
++
++alter table case_worker_idam_role_assoc add constraint role_id_fk2 foreign key (role_id)
++references role_type (role_id);
++
++alter table case_worker_exception add constraint job_id_fk1 foreign key (job_id)
++references case_worker_audit (job_id);
+\ No newline at end of file
+Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/service/AuditService.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/main/java/uk/gov/hmcts/reform/cwrdapi/service/AuditService.java	(date 1605106270740)
++++ src/main/java/uk/gov/hmcts/reform/cwrdapi/service/AuditService.java	(date 1605106270740)
+@@ -0,0 +1,45 @@
++package uk.gov.hmcts.reform.cwrdapi.service;
++
++import org.springframework.beans.factory.annotation.Autowired;
++import org.springframework.jdbc.core.JdbcTemplate;
++import org.springframework.stereotype.Component;
++import org.springframework.transaction.PlatformTransactionManager;
++import org.springframework.transaction.TransactionStatus;
++import org.springframework.transaction.support.DefaultTransactionDefinition;
++
++@Component
++public class AuditService {
++
++    @Autowired
++    JdbcTemplate jdbcTemplate;
++
++    @Autowired
++    protected PlatformTransactionManager platformTransactionManager;
++
++    /**
++     * Capture and log scheduler details with file status.
++     *
++     */
++    public void auditSchedulerStatus() {
++        DefaultTransactionDefinition def = new DefaultTransactionDefinition();
++        def.setName("Auditing scheduler details");
++        jdbcTemplate.update("schedulerInsertSql","");
++        TransactionStatus status = platformTransactionManager.getTransaction(def);
++        platformTransactionManager.commit(status);
++    }
++
++
++    /**
++     * Capture & log scheduler exceptions.
++     *
++     */
++    public void auditException(String exceptionMessage) {
++        //separate transaction manager required for auditing as it is independent form route
++        //Transaction
++        DefaultTransactionDefinition def = new DefaultTransactionDefinition();
++        jdbcTemplate.update("invalidExceptionSql", "params");
++        def.setName("Auditing scheduler details");
++        TransactionStatus status = platformTransactionManager.getTransaction(def);
++        platformTransactionManager.commit(status);
++    }
++}
+Index: src/integrationTest/resources/db/migration/V1_3__insert_queries_role_user_type.sql
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/integrationTest/resources/db/migration/V1_3__insert_queries_role_user_type.sql	(date 1605006955852)
++++ src/integrationTest/resources/db/migration/V1_3__insert_queries_role_user_type.sql	(date 1605006955852)
+@@ -0,0 +1,7 @@
++-- insert queries for role_type table
++INSERT INTO role_type (role_id, description, created_date) VALUES (1, 'SENIOR_TRIBUNAL_CASEWORKER',timezone('utc', now()));
++INSERT INTO role_type (role_id, description, created_date) VALUES (2, 'TRIBUNAL_CASEWORKER',timezone('utc', now()));
++-- insert queries for user_type table
++INSERT INTO user_type (user_type_id, description, created_date) VALUES (1, 'CTSC',timezone('utc', now()));
++INSERT INTO user_type (user_type_id, description, created_date) VALUES (2, 'CTRT', timezone('utc', now()));
++INSERT INTO user_type (user_type_id, description, created_date) VALUES (3, 'Legal office', timezone('utc', now()));
+\ No newline at end of file
+Index: src/integrationTest/resources/db/migration/V1_2__add_sequences.sql
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/integrationTest/resources/db/migration/V1_2__add_sequences.sql	(date 1605006955852)
++++ src/integrationTest/resources/db/migration/V1_2__add_sequences.sql	(date 1605006955852)
+@@ -0,0 +1,25 @@
++
++create sequence CASE_WORKER_LOCATION_ID_SEQ;
++create sequence CASE_WORKER_WORK_AREA_ID_SEQ;
++create sequence CASE_WORKER_ROLE_ID_SEQ;
++create sequence CW_IDAM_ROLE_ASSOC_ID_SEQ;
++create sequence JOB_ID_SEQ;
++create sequence EXCEPTION_ID_SEQ;
++
++ALTER TABLE case_worker_location ALTER COLUMN case_worker_location_id
++SET DEFAULT nextval('CASE_WORKER_LOCATION_ID_SEQ');
++
++ALTER TABLE case_worker_work_area ALTER COLUMN case_worker_work_area_id
++SET DEFAULT nextval('CASE_WORKER_WORK_AREA_ID_SEQ');
++
++ALTER TABLE case_worker_role ALTER COLUMN case_worker_role_id
++SET DEFAULT nextval('CASE_WORKER_ROLE_ID_SEQ');
++
++ALTER TABLE case_worker_idam_role_assoc ALTER COLUMN cw_idam_role_assoc_id
++SET DEFAULT nextval('CW_IDAM_ROLE_ASSOC_ID_SEQ');
++
++ALTER TABLE case_worker_audit ALTER COLUMN job_id
++SET DEFAULT nextval('JOB_ID_SEQ');
++
++ALTER TABLE case_worker_exception ALTER COLUMN id
++SET DEFAULT nextval('EXCEPTION_ID_SEQ');
+Index: src/integrationTest/resources/application-test.yml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/integrationTest/resources/application-test.yml	(date 1604315502235)
++++ src/integrationTest/resources/application-test.yml	(date 1604315502235)
+@@ -0,0 +1,62 @@
++spring:
++  flyway:
++    locations: classpath:db/migration,db/migrationAks
++  datasource:
++    driverClassName: org.h2.Driver
++    url: jdbc:h2:mem:locrefdata
++    platform: h2
++    username: ${POSTGRES_USERNAME:dbrdlocationref}
++    password: ${POSTGRES_PASSWORD:dbrdlocationref}
++  jpa:
++    show-sql: true
++    database-platform: org.hibernate.dialect.H2Dialect
++    hibernate:
++      ddl-auto: validate
++    properties:
++      hibernate:
++        enable_lazy_load_no_trans: true
++  main:
++    allow-bean-definition-overriding: true
++  security:
++    oauth2:
++      client:
++        provider:
++          oidc:
++            issuer-uri: ${OPEN_ID_API_BASE_URI:http://0.0.0.0:6000/o}
++        registration:
++          oidc:
++            client-id: microservicekey-rd-location-ref-api
++            client-secret: ${S2S_SECRET:AAAAAAAAAAAAAAAA}
++security:
++  anonymousPaths:
++    - "/"
++    - "/csrf"
++    - "/health"
++    - "/health/liveness"
++    - "/loggers/**"
++    - "/swagger-ui.html"
++    - "/swagger-resources/**"
++    - "/v2/api-docs"
++    - "/webjars/springfox-swagger-ui/**"
++    - "/favicon.ico"
++    - "/error"
++idam:
++  s2s-auth:
++    totp_secret: ${S2S_SECRET:AAAAAAAAAAAAAAAA}
++    microservice: rd_location_ref_api
++    url: ${S2S_URL:http://127.0.0.1:8990}
++  client:
++      redirect_uri: https://rd-location-ref-api-aat.service.core-compute-aat.internal/oauth2redirect
++      id: rd-location-ref-api
++
++  s2s-authorised:
++    services: ${LRD_S2S_AUTHORISED_SERVICES:rd_location_ref_api}
++  api:
++    url: ${IDAM_URL:http://127.0.0.1:5000}
++
++auth.idam.client.baseUrl: ${http://127.0.0.1:5000/o}
++oidc:
++  issuer: ${OIDC_ISSUER:http://127.0.0.1:5000/openam/oauth2/hmcts}
++  expiration: 14400000 # milliseconds 4 hours
++
++loggingComponentName: Rd_location_ref_api
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/util/MappingField.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/util/MappingField.java	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/util/MappingField.java	(date 1605468985066)
@@ -1,8 +1,16 @@
 package uk.gov.hmcts.reform.cwrdapi.util;
 
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+
+@Retention(RetentionPolicy.RUNTIME)
 public @interface MappingField {
 
     String columnName() default "";
 
     Class clazz() default Object.class;
+
+    int noOfCollectionProperties() default 0;
+
+    String[] childes()  default "";
 }
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/config/SecurityConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/config/SecurityConfiguration.java	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/config/SecurityConfiguration.java	(date 1605271483720)
@@ -5,9 +5,9 @@
 import org.springframework.boot.context.properties.ConfigurationProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.data.jpa.repository.support.SimpleJpaRepository;
 import org.springframework.security.config.annotation.web.builders.HttpSecurity;
 import org.springframework.security.config.annotation.web.builders.WebSecurity;
-import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
 import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
 import org.springframework.security.oauth2.core.DelegatingOAuth2TokenValidator;
 import org.springframework.security.oauth2.core.OAuth2TokenValidator;
@@ -18,18 +18,16 @@
 import org.springframework.security.oauth2.jwt.JwtTimestampValidator;
 import org.springframework.security.oauth2.jwt.NimbusJwtDecoder;
 import org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;
-import org.springframework.security.oauth2.server.resource.web.BearerTokenAuthenticationFilter;
 import uk.gov.hmcts.reform.authorisation.filters.ServiceAuthFilter;
 import uk.gov.hmcts.reform.cwrdapi.oidc.JwtGrantedAuthoritiesConverter;
 
 import java.util.List;
+
 import javax.inject.Inject;
 
-import static org.springframework.security.config.http.SessionCreationPolicy.STATELESS;
-
 @Configuration
 @ConfigurationProperties(prefix = "security")
-@EnableWebSecurity
+//@EnableWebSecurity
 @Slf4j
 @SuppressWarnings("unchecked")
 public class SecurityConfiguration extends WebSecurityConfigurerAdapter {
@@ -73,23 +71,23 @@
 
     @Override
     protected void configure(final HttpSecurity http) throws Exception {
-        http
-           .addFilterBefore(serviceAuthFilter, BearerTokenAuthenticationFilter.class)
-           .sessionManagement().sessionCreationPolicy(STATELESS).and()
-           .csrf().disable()
-           .formLogin().disable()
-           .logout().disable()
-           .authorizeRequests()
-           .antMatchers("/error").permitAll()
-           .anyRequest()
-           .authenticated()
-           .and()
-           .oauth2ResourceServer()
-           .jwt()
-           .jwtAuthenticationConverter(jwtAuthenticationConverter)
-           .and()
-           .and()
-            .oauth2Client();
+//        http
+//           .addFilterBefore(serviceAuthFilter, BearerTokenAuthenticationFilter.class)
+//           .sessionManagement().sessionCreationPolicy(STATELESS).and()
+//           .csrf().disable()
+//           .formLogin().disable()
+//           .logout().disable()
+//           .authorizeRequests()
+//           .antMatchers("/error").permitAll()
+//           .anyRequest()
+//           .authenticated()
+//           .and()
+//           .oauth2ResourceServer()
+//           .jwt()
+//           .jwtAuthenticationConverter(jwtAuthenticationConverter)
+//           .and()
+//           .and()
+//            .oauth2Client();
     }
 
     @Bean
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeController.java	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/controllers/WelcomeController.java	(date 1605279235653)
@@ -4,6 +4,7 @@
 import io.swagger.annotations.ApiResponse;
 import io.swagger.annotations.ApiResponses;
 import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.http.CacheControl;
 import org.springframework.http.ResponseEntity;
@@ -11,6 +12,12 @@
 import org.springframework.web.bind.annotation.ResponseBody;
 import org.springframework.web.bind.annotation.RestController;
 
+import uk.gov.hmcts.reform.cwrdapi.client.domain.CaseWorkerProfile;
+import uk.gov.hmcts.reform.cwrdapi.client.domain.CasWorkerDomain;
+import uk.gov.hmcts.reform.cwrdapi.service.ValidationService;
+
+import java.util.ArrayList;
+import java.util.List;
 import java.util.UUID;
 
 import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;
@@ -29,6 +36,9 @@
     private static final String INSTANCE_ID = UUID.randomUUID().toString();
     private static final String MESSAGE = "Message for the Caseworker Ref Data API";
 
+    @Autowired
+    ValidationService validationService;
+
 
     /**
      * Root GET endpoint.
@@ -49,14 +59,18 @@
         )
     })
     @GetMapping(
-        path = "/",
+        path = "/test",
         produces = APPLICATION_JSON_VALUE
     )
     @ResponseBody
-    public ResponseEntity<String> welcome() {
+    public ResponseEntity<String> welcome() throws Exception {
 
         log.info("{}:: Welcome '{}' from running instance: {}", loggingComponentName, MESSAGE, INSTANCE_ID);
 
+        CaseWorkerProfile profile = CaseWorkerProfile.builder().build();
+        List<CasWorkerDomain> caseWorkerProfileList = new ArrayList<>();
+        caseWorkerProfileList.add(profile);
+        validationService.getInvalidRecordsWithJsrConstraints(caseWorkerProfileList, "caseworker.xlsx", 1);
         return ResponseEntity
             .ok()
             .cacheControl(CacheControl.noCache())
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/CaseWorkerProfile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/CaseWorkerProfile.java	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/CaseWorkerProfile.java	(date 1605468750985)
@@ -12,7 +12,7 @@
 @Builder
 @Getter
 @Setter
-public class CaseWorkerProfile implements ICasWorkerDomain {
+public class CaseWorkerProfile extends CasWorkerDomain {
 
     @MappingField(columnName = "FIRST NAME")
     @NotEmpty
@@ -33,7 +33,9 @@
     @NotEmpty
     private String regionName;
 
-    @MappingField(clazz = Location.class)
+    @MappingField(clazz = Location.class,
+        noOfCollectionProperties= 2,
+        childes = {"Base location 1 id","Base location 2 id","Primary Base Location Name","Secondary Location"})
     @NotEmpty(message = "no primary or secondary location exists")
     private List<Location> locations;
 
@@ -41,11 +43,16 @@
     @NotEmpty
     private String userType;
 
-    @MappingField(clazz = Role.class)
+    @MappingField(clazz = Role.class,
+        noOfCollectionProperties= 2, childes = {"Primary Role","Secondary Role"})
     @NotEmpty(message = "no primary or secondary roles exists")
     private List<Role> roles;
 
-    @MappingField(clazz = WorkArea.class)
+    @MappingField(clazz = WorkArea.class, noOfCollectionProperties= 2,
+        childes = {"Aow1 Service Code","Aow2 Service Code","Aow3 Service Code","Aow4 Service Code",
+             "Aow5 Service Code", "Aow6 Service Code","Aow7 Service Code","Aow8 Service Code",
+             "Area of Work1","Area of Work2","Area of Work3","Area of Work4","Area of Work5","Area of Work6",
+            "Area of Work7","Area of Work8"})
     @NotEmpty(message = "no area of works exists")
     private List<WorkArea> workAreas;
 
Index: src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/WorkArea.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/WorkArea.java	(revision d12621e4972a254150741b6f9937211cf785a774)
+++ src/main/java/uk/gov/hmcts/reform/cwrdapi/client/domain/WorkArea.java	(date 1605182653498)
@@ -1,14 +1,20 @@
 package uk.gov.hmcts.reform.cwrdapi.client.domain;
 
+import lombok.Builder;
+import lombok.Getter;
+import lombok.Setter;
 import uk.gov.hmcts.reform.cwrdapi.util.MappingField;
 
+@Builder
+@Getter
+@Setter
 public class WorkArea {
 
     @MappingField(columnName = "Aow1 Service Code,Aow2 Service Code,Aow3 Service Code,Aow4 Service Code,"
         + "Aow5 Service Code, Aow6 Service Code,Aow7 Service Code,Aow8 Service Code")
-    int serviceCode;
+    String serviceCode;
 
     @MappingField(columnName = "Area of Work1,Area of Work2,Area of Work3,Area of Work4,Area of Work5,Area of Work6,"
         + "Area of Work7,Area of Work8")
-    int areaOfWork;
+    String areaOfWork;
 }
diff --git src/main/java/uk/gov/hmcts/reform/cwrdapi/service/Caseworker User Pofile_Final draft MVP.xlsx src/main/java/uk/gov/hmcts/reform/cwrdapi/service/Caseworker User Pofile_Final draft MVP.xlsx
new file mode 100644
index 0000000000000000000000000000000000000000..54276a432254829c3440ec63b7b1154e327d9ceb
GIT binary patch
literal 75578
zc%1CHWpEr#lP)S|i<z0387;DynVDrVGgx3TGc&U+mMlh#!6J*9neNE;xBKlq@5b4G
zCvM!+QBjjK-T5R`W>!{@yc8%HDi8z^6c7*)5l}}Q&&&oe5YR0Q5D*Fw6o{6Hovo9J
zt&^UzyS<5{4!xU=HDMkY2xSfs2+;q%{(pUqCCS*XFd_!ufqOvuuL$SGH(AK5PY_!q
z+xQhg>JQb5sy_pVem-7t9a<E_{+<*GRl<(^(PGzIM6r*fLo>ZeT}bf6dVHb`nx^|x
zaf8n6@#M?oWgHr2uu7gYx@8lvv08mJLD3x!g1US|e;OOp<5@<&bvIN+2BehTE<GmF
z0TXQth65FP_asF;EPduzeIqO-c=q(QZf)MC+WXp~O|v*i8;#E|&pL5sspp+@iXTCC
zXv%fN5^VVwkQ3sgLlo8aL7{>_2(sGj1d{jLLoz8E4Be-v0c-NgIBBVf#$v(YoLrzJ
z`UnzraB0tNw#@x#IbF)RPbbVOxdppTpXV_L@2`ZqNM>Yh^;*58z(_)vpex@>D4y`v
z4IF{8aYb?bDBv5(yFLK{A$ha&ox&j_I%w-kg0nL+XzNIVlU}U%!iE$#`7MlOdJ~ja
zZ+)HHAuUSG|MLt8{3^ZUH2sbkn7nIjRAc`J5QC$uy@c7cMTAK6q0U;?rHJc3|K&ET
zZQzxJDS7vSr~V$UqSFBtQc#J(8QvN<@m=_K&|1d<p#~jzSuy((DDg+L&z@(%`ZYm~
zU=Dg*bw+eX@o+dLM<+>n1P|H%{94x4EfL-wF}!W_OL~B{eR~51lK(G-p;3jA<QhOp
z1M(ggP#E+aOspLl=-=o6TM+*5^?p^v$;kCF!iAhkJckb5&8@~D3QM^PNwg6u`}j%z
zL}>h)Pl~hJMS+W`j2#Fn?%Uz>JhHON`}J^$==K+DMFcV`4@r}2Wk~YlXJ<%ia)%_b
z&lQ{BkzD3(=5ABPKe<!7bVO5^x0K{c4X=}k&0Kt}MVzEp!-hsF#0^2`OZC?rkkME(
zysrYD6IME@45?}6$T^IkO!r+#DmwTe@P$kIcsdnr$kEVjsmg1}n&{>MTSdv7%c90G
z%YmENUC-FM`|4wQ7s`tloovRCA~7rSJ@cgaAX(0huVw@5#b~DccMj;j@}cwLfCz$;
zHQ;|r5~PSC4>`acG)N#IY#=CLH*1DJdE#p4U}b1$XZ5~+{wrsI0XYNwe|pXSPhahc
zE0(`w2GTQh<4IJ~<EQy_I@A8iJfGj^1W=h{efQALmybMY;F@RT+vJ2;M{oCqL+K~3
zD`45?rR>~jpE1LL8kyZIN0r;p^zi422`QZEaq^ka#7S$%PtVw^7bOOhOUig)TEdHz
zl_#9#fC{Ls$%2bS#wmhpE1htck-1CZ>pn{4nM2>&eTe;F3DL%j=8|0h`np(q`PL|-
zFbk9Y_0e3RjRyJL<k+A3<Dh6E-H*awam1XN6(Z#5_IRf3Ok-n^^=X)<JAq;GIIK36
z6+}uc@~P+(bid}m(|pO_1QHxHGIv@}bCm9K&wix4paJC^i6PacAwQKm4%Co^tH0((
ziIx;eY)I+i8f^=IEX6ADW{n7|)NrfZ?B`j_B5}2LQ_xHL$#r`$Nx^P(8t9ITGH{_4
z)PYuvD7!uy4H`H|`}B|D$TrVa$_WYtR0#-21i&wVaQyc`tWeRhJLE+4*0XpE+___g
zCiVIlR4y#oJbj`9{_{2%BVPK83dO{75o+aa*BK|34Sj{`YIHK#3JZnVL@HA}Lv<k`
zLk?@Qiu4OkG;)bz>V+l23_*G!OWsEuRTJqU7()*bnJ#JH7ZZnsLwAZD79qb+gAI&D
zQQB(7;0e;}L)g^3!-dqTJ%!6{-&DJqb%0V7Tlgk%TFAE0Y><d=u;5bnc!NI{g(6eW
z1W+Q55qj&KYi9o#xn{8^Q<@B2mNd~I`5pypEBk?x%mjP&gr;;+R)4A5$4zV?TWyL=
zE^(Hbg9B=(iM0CghHv3+C9XI=1J=#jgrcIVtA5%?RGv76Jt7ik$dJ3ckhgbmAO_jF
z#0--Dd=?=fOMLa94GjSXW9Ug0Qyz_lF*#8vbq(ybI*xVmN;nVL7`zLw1>|~_nk921
zz7T2U0MZo3L7uqi%KS;hD0t;Z4nY*;O1*{0(~VE3hTWbtsCzFxh$yltW@}{%r$tq>
z6&3uve4O9zljVv+md?r}LW5ap;;3lYGV}6!vV#moQ#An>?oDWui==M0TjH>hG#)`B
zMR9iW;O=>tS<x2@yJK+7=~Hj;P6jw`^r&Ogi9~iQ9>^9^XsHjr{vTGB5_c9JyjbWY
z^4;Uh4v=XwGWln1$iOE^EM(8Dr3i6l%X@UG-I9RelfyajOWG=WI=>%aPxT*c-_RD@
zW;rKX%d$Bk4`c?tn)G7N!m`UGm)LBx)NU~QnDT6;ORtokdV%k4^3k-9Y4+fI7NM-3
zeMG3rV@QDI?&%xd5GQwY=^qfMSwD!x-kWeKlrBIBUsN+1&EdF>g_ms<c0@)D$<=@@
zroz)5=ddY4@!HxxPkB9sTsxV<fsAV250z!azROUUI^((`JfQ2{B-R+~6?k2Lf`a7a
z);maY?@3sqOyb`n=z(#t8gAu_HA_CG#T{?wSA<J?orZp{-5WCv?1qjv5x{*M_Clf;
z7}Auy^mX@*`bmzH!nHAHWS41*x3qU@bLY)s$FXL*TP#JaNj6{EeB1@AZFB>|kJaw=
zY`pRO^s?J|klaPvZ3EUcSw#1<o^D3qACruOgUP=EkYsj9KtP!PnPiUUCMHgf48K2E
z-?J?tWz{a78#DBb;>5Scs|ykIKpd6%rlM><LUQI?rVh^rsVcCeb+N_W!kM>F&k|PB
zrEbIK*5KA8Bx8AWwamC~g7b0%I7U5}Ss9&7;fhX=ub1z=eP8NTU8S*&rph_T&i&xc
zlWTc??WApWf|;PXPS4$%>nQ2x9bLBRap_`B&U&_{SbUcg`p=mvb%zX=hoqU4)p25n
zNeDrO9YF?7S~_K(O8D4wkHCg1bbPbxC(e7a4Mpu>3ldLW`}_$-2SBwy8gK3R66%Yz
z`A;>Cc8Wq=y27=SC|tU(Fgkw}vQ1dOz}XMW|L9urO8-eNs9F8!b8opo!@!X(Z9{uC
z<tRVPCO2Ph%&TKzP6dxpZ>e?8Q`<hu5_uiw+sOT`-X>(Lj%gQ5j#m{t+eo2ImFyNV
z{`@MBzw{gZy#PqaZ5KXFx>2gzX6duzqliG99$opYD!%30IIaLq$BJhP`-3&Gcc4x~
z#oB2ije&K}zDARvt%YR?@w3_20Z9mN8oj6W{Ho{9je~JoJ!4|<Au+DEoY-Lvcl$L~
zfzUDeKH$0LXI+n0T@6QL#?LiWncpoalWO>M&`Ll}&j^9QIrmeN8(Vb97^Z$AzxuI(
zD8V51k}zh<fwBMyV9FwYE^w$#An9WNsi)*Sq99PlbO>DqKScO$FKjm%U|~)mj2Xf9
zRvlg&LR>$!nQpCj_H&OkiVYv>l*Jf$l}I9ss*KUNwU3sPb)wI?Qr`uHF2QGv`s%;<
z2N=T@finNfA>;}?@QYNZl$h7&CM3a!iQ`CtANmp&U=06$JCCsS{q|x?+;NYSpxCjb
z<n8-ow*?Jm<E?xe#|NTy6nxDT(Tnkb2d)>-c?}Wx&ltK|4SqjF>dA-~gXF0g$M=rO
zM>UKu4Qc#6E5R56fNdxzRtGr)j8#iPvh-U<eC!_?!{%p}d$+WPcD|&Zb&j6sNS+(3
zY5E97gCPvWx5j@lng3#9{l$#@iz)jTlj1LC{2xsJekuc9LywQTFY8$bXuK8I+^tG_
z1*-@1wVF1Yc@J<!5qL>CFHIaezNiba1AWUE4b7ov@Gwa}HN-pCR*?cH-G`{Haw7!X
z^TV=B6fdyz8;rdJmg@bt1n4kpSVxt!S@nFlZzdZbz1J<Edb@k}P^w4kL0wAA16Bqt
z)f=L+Kh1ajW2RS<gRnaQ?z8~DlKd~3{-@FV{e}5I+PvAM9@#%Fal1$&kEE7<cZ012
zTmfE7x0_!~i%kQ0X&hry^WY5YS5+GA@I~9NmCJf>0-w3lDxA>hdfZK9#E`M$p(1M(
zQ;A9Ju8JeHkRQ6gZYQ$E#Im_DV`XQ5)y??@tan*h<{hLGIVpi9%x63nfy{b0JFm|e
zuT|{cT}Y!o-XDO`J<W;Fc-H}e#bGJNl8VF;zv$apReN>TXp=<)tVF}lnqr>=PE#9K
zo}i(xa0&y3^+Q{w2Ojj^UeD4$1)`V!#hT2;M;qKeL@fwUOq!ktvk`g1BOQ{u!c>d*
z`zKp<WDbF>;A!AwLV}95?z0C<n>{a{7<trI*s6#VKaRJ;^>JwRjN9QaZ3aelb}j9&
zMFOo$Gy?>gAzQAF_8>U)2l1av%S*SiIcIUSWNnSIPOhl>_o_4;yg|Ngg3qseEAW`u
z-*yQ@mFQfxH#t-^${w^a>j>-Ob;Y<21`lDs;cPJg{nL`oaq{q;11KGk|ILyy{l}73
z#PxgvWkL)&3phjEwXG{9Bp$z24AO1n7aW^74Y4IB3Y+WfPy%z7>X))heHi8-=%ZC5
zFhKSk>lbIvF#!b`?w^>^-!OS{b418fmdeZ|&h-aHS8rTU8>Psw-jOr8E`=(RXJVXB
z!%v{L{jMJo2^|*CzpGD^>@Gk2EfY_kE^SwKXC2PmOuF^}Zd=9`*3eUe_rcfY*z?RD
zZ&gdM%uI|DqmPMttiiq8QgGy~DCrpHuzlcH9QG4qWxe+v-sHz`)w&7-tx3<Xqmp{l
zR3>t0S1j`*x>p}EjSmavFXv_y6vw0TUcmmzVUGK6PWb@xobtcj&3;Gsn5Ncy@8|>Q
z9Yti74|vfea&kX*FC|Ik?)Y#$Wk4w9LG+U6V*KtL$%#@gBug7KZ-RrO?FMeg_C9~n
zdAn$GPQ=&+Z1`3snz?|c+{}~4>~2;*IpTDuu?#G?QA?w$+33SfCir3W?pfEI9^V_+
zA|pEWh5-iatPJMqxFJ&whqV<rxZR}7`RMXhvnrI{OR-_iU20=^WRtA|Lt^Bwc?XxW
zbN$D?`}29LK~tMae(NQAR9UZGO`>aoMb0O}+uJ7Y(e;sLU4x3xzKS~55qikJn!(q0
zM~j^pZbvoxo-29#*mx$D>Z6g4R@p35l{*3ix5*oB2!WnX+7w>VA?4IsE5`ySyz3rL
zL?m{a{dGzm4JA)kPtaLuH<ThMT^b0LgGqZHoyfwnxut2E*7Fg=lQfVH-NE_y)~oV%
ztd6A?8OTgN+{bJZt27%n6WXSs*5IF%(5iC8Cp~w+^9z!#Iepxqr{i(bRgY-36*)0i
z%jxaPQ@!_|hPB1Mqg>VHP+a}4rfO}2_tSp2<2L200Xlc{6L5y85R2NG4f<jZiFvzx
z)bnx{Y-Wg@$x(L@rAR|%^Zw&uMem1ZwM23BAe~SiCA25Rptak{t>|{EFeXM4qZa(H
zH;TDsIBFsAIzvoBdL$w(_#ZxW$hT5k5iDYf^R(cfjO_F_nks)%h`=#xH1tZ^W7p;5
z_CNX|S(xMyH)BJIrqH~J%~6ffU^(7W)hjV!)!}jtyui7kwg;yZ*o($CVfV{C+YEXW
zF-bdqkavE<QYo5lliU_1E)#{A4jr{COr{~gc9wsFUM*{XUlK#}1a+g`)X2n~!s2{|
zH(nibSrUrTbwWND{m5_qJ8)$d*8u06<|iPt#<D?>4URpi9LgdO<?>}!bGD<-yRz;)
zU}mUWbiHX-rBH@;OJ%}7Vs%Np2NfiLknWD3_8hS+j0iam9jsC}zhISVo`zZq;pj%q
z6+*I18mRI!Oq?kDN=&JAKDCPJo|5WT)$4j7GbGX$GF&($7XDQFR2T_zN65(t8#kpo
zLg@tB1N@Z&H$Tb7QX;)9FG(x_goW@zQS`%C3lWusg0P@~Up$HO^5>?=FfeP{!c296
zy7Dk1TZ)YOr{qTb;8jqLq^XpQ6wD~1oh1WT{`EN2URiM=yPzgH7mZ+`pZ2Iq&H3dC
zu)_sI6-Uq#YHi0hN4c`cU6H%EM+^{fZc1bQvA-pM6cvYd@AiS5l@Rv{T{I2yXM!Nd
zOfl3C@#lg-$5b!!i*z9j&7Oic+p`K~u5ke)k>i;S4LKAN7wcIL;|g;j6>HJHsZq$r
z#*(nRiz`7q(eDDaEXWsvCqqRYLvrC6=mrB-f*WIG9P9=G9Yu{%K;gym7M97#tR^4n
zwnT>8pJbpxy2;HAUyGIhWPa&tB%4Q`s;B(RW3fc;s{~ox$KVp^Cp>u)#V}G-)X><V
z09LL6Iypwh{%$x>M>tx>8fjoG?~AVN1M%MH#HjkK8&NEEy@1$ahC>mN#1fL+1pCHt
zuCPv0u>wtle110O81gf!9qgMO;5IyY96Uas4`isc4A9`twvk#{`ugGiSP;9I>iYUr
zVbd0zSUo+CM-*U#OAi70aI~B~Lnyd6LSPj6IV$Bij>tWdk@khh@1Vp1@gIXxS&v->
zzkd0}Ulduh^1nDSZR2f}V)pyegJm9E1$obq63UIxENSk>r`fMuVQD3?va>;7A7{VN
zMgv^PX3zzyVK$X5Z_U!%jR}eZC(Xpz*NqDb3rDLYD8}>r^7bG_@bBvZ`6DVwQAo54
zpwx+cKDMTm$6}G3%@-$9A)@IXz|um!t>YS|BS8#cru>_UsUXbL{%UU7F@Uv|0$@1-
zu()R-W8n*D&#}>!kar}0{-UVFXFpUTxx|n|MkU63H_!>Sgs2J2KtIwS8lng@#XvvG
z9~>fyijV~F75xomIc)#oSFC)EM^pmugG4*x%MhpW>L-b?AY)Uq=kTzU8#2=ZAW6>c
zrF1uZiHf0Y9z!<bp%g-t0BLAulA#Pj*Z|rY303*$%H4+}%wr=T<*%fu#FU$4YVr+4
z)RfSW0y9qWrx{>mOeCW3U|Y;n)NTx$@<RRNgLv36O(9@dNXF7J&_YFEsYu4MG2lY?
zw~Z1!>jqJ}&JnA&wE_+9>n!WeE|WDP89yUB>|RZmIq(+yZ=cG|5pYpPOkvmPNpUx-
zGxX0i&pxmPoooxRYvDvm9;**E$J8=Cf0m{lWd`AWpa=?&1d4WrCR*Mfkm)AQLWE0&
zq@07!r6xIVO=hergoCo{MGS?WW?I#fvo?Q_o1mB1Zi;f*aqsFM;Iq!`TVc1GygPjG
zxy;At9q@d%0i}?_Y%dA*_EORC)W!7mH+SfAM904k-{YxSA;3eoDDj*`@E(PpNu{~4
zZ95*WTaVroP_+1ZIkMI(gvfqmuL9pWBmZXG$UQJVr*c!L+F_%kieGJ&%yFW%Ri|S$
zH&U6NzT(jKH0kRWS)dWRAh!$CMC+?r1*+zAEn3?FDliBn{AFS*#SRhMiB#MJE~sOP
z)*DlNR|i_?;lrFW2vpL}x3!~6tCOsL)q?@gle61U`=J0JkW4?k^}A<OO5Cd}LCA&a
zjg@(A4zpuukGGRwx56x&pzLYHnDmU_;W)Toe^?)xY6ZHIcO(1hn+9II!5d6GV{pcy
zdbPD|2DY@8bmwIXg!|hHb3H2N-*>{LRMQepuE+a(aYl98_Bvb?4lrG5XNBiyvAU&a
zWrstqdfi)=wlsni!SQO19a9o;W2m+g8+L^BA7ET<$#R^r${g&Q?pcxVa*A(^+xh68
zI-_JU^CzgHLMp=$am#1)n<<w?3~Ti7cKu@~s4@zZ&k5)PQ^5Y)#)jp+v58ccv0Gt;
z>p)oaMRc;usBVfdXfww_9W@a7VckZ<j0YPlEu$Dm-sO|f!Ko7g%%$-><w;6Vd3-u&
z-UPab#?D3XAtXbHq*i&Hdr!cZSI2vE4Dv^Uun{PifZv{L|DN0u{_4O2kUx^}mZNT{
z{tW3w9R$fU5FIOO=@b^ykkiq3Eyz4;2CU4;(7yEVP;=+-M9#_j`YKe=jtN?zGW&wK
z=13(zdNfCJ=3=@aW<e{~Cy5`8pbZNfU_#LoSV(62zX?&Orak)L$prHnG!H<!<rj!V
zt6(B(Poq87?rAVfL6r_IbMdwj!y4Xv!N!AS<;wfEBN<EP-J(2ekr2vN;@~6jiGZ9b
zU*^70|7<;D3F!xI;TN(=@@H$GXzu+9tU@g!+h04PsaFOS5UfL-AIbOY1I4EjUKojQ
ze4E>yjz_~W<j6WJH%if-mTHlyYv(q>@AQN!j|9`%@U&;{f1%D?GD0#)^5@}8S3Q~T
z5`Q6fY%yzqiCqeBQO|dJ?n)OWH#+4bLrE#-cj+JJlyXtde8ws0&G(%3L^0gAfO>Sm
z{=`2cz4jwgD~;trfR(g=hc&^gD77;`wSm>_GO9=`+15|BVl&;|YR;`F*Rt4aH1#M5
z6Mi3eYG7$Sj+6!tczn3*01`Zn@}O5E7*iI)g5Yy9VpEcaK@Z&=6FrvMKB~pit3Oxs
zegF!!y=wg17t|@oa>`g;bPuzDyq#k_dX)xWTLqWVxh|@Hf`5!Q)?DbgUH~Nw{J%MO
zu>8llBPhDZvX2q*<C*_+;G!ofMX+MPj<zu20{aV)itZ@!?I-i*!iT3r^>pFrKBG0p
zlLODJSq${3Fxq2hP?+Ije#M$|pSELN!CKD4)dVOy-k8l<8;%niSy{`l!4wS@*xFzP
zQi87r0>6&cizAhXV@8e(29Tv)UQa>NL}qx?FIRw9drPZ2f*nroa%`iuliys64Zh${
z4*O0>Tn+{elf~(~i^O`wlrJax844Y-Y3)(GAVEtnr1f8&LjIErM3Rv5|3@xh{cl~6
z@c(fa)TFqL;RDR){okEF+5YqNsWASjPY|&awo_!$(`6-qc)B5(`g%k32-G@Wvd)PG
z$CSL#-IL<WY*GM5bRWmn%eaI0p`i=dub3J}M;;a|{nRo)83TUT>WBDYbzW6|@}S<x
zZqtr$U0R(Y*LmVUL$X**gy^MdrUiHgO<*(4(me!44?kvN;FW&vU_j^uZcZ7;$9vgj
zEQg)2)<O$un(H-gt5w_SYE{w+MP@I><rZuu+Vp^-6eJ+b1J)?zV<QZ%y~S?JA~@#H
z`P?is@it>z{+SAbH{(QRNh5-8Mvxfw7W7davciuR6pyXRX8H$w=oy*|ueAQ`;EqQS
z^KRprFz(d^hktN8&>qTTUsCf%W2PgOUFr0^p6qgRxXkcs|D@VK|0ON0N$v4JiZJ&7
zHNt{_M_4hWQuvPcC&C5t_Xu0b14I}H(d*Oxzanh>f=TW$DpiCO7E;Gw__7w3RsH^3
z)~#KRI<B*Acn~_eF=ta-@-7MmMd5cNiHh*x#a_y|wLcLy7^EygaCKbpoi}CsIT~lG
zT~)>A(hjnLrkL9m{j!zE?;Cw7?b}(DHvzBDN8j|=?P%zD2f`jNp;(8Qh~*vN{(yO{
zrt!vCc(5Xyu|xN#e>|>R2_QW6{ZCxL@!uv{XcO3IYmi`-%_DGGdy?pJ;*_n_)!kez
zdoX_JV7tNc%pGqj11&C!#^MnKYMh*Rf&S);%TkA*;pf>lDkM!e!oJcK+hw(kj9KJp
zrus5;L)d%?e(XM<?@P6^Sfz19iA$1S$x@D=SHW3Bi`<!annAw>E9rQ`?kt}Pt>U-R
zzn#hUA@XI#zh(S(ffQ-aWeD*Np;{x&y9=zECMF+AkW;GIBKB4h{xJ;lSg|qxM`6JE
z?>-3cWkeOd3wT3Z^NBk&M6@^*gZSor4Qlwf46%|Nb7z|J`eIy4+|rJF+WPbHoI~yq
zgC$e~o&6g~@U{_#d5t}nulMnLq4|jlO-DOqZ$4lC7!)6`_=|~DwO`oU09De{Xfc|T
zXP$`&ZF-QGhl&Y-oXgh{G|fiEJI(9NZ?~s(c|zE>?L)~`+{mS;>+#dZ1?J0SBq;;A
z^oT#$6-RhNp!O_10wsEbkLjd)akYOpYooi{+B4`sxj+Yl4bB8mWKsb^g7e1(#tsIq
z7Pe-N3@$d-AOFzI^e+FkziAMmA2uu|*jHW=T*z&<>1Njt&Ba8O3Y#0rGhnKk(G&RO
zkmf=e0xm&%r69Mx<rrSu7}+@yk-Oct2Cc{OEz##k+BZl99PQbu@Z84dlXNPS*F@;_
zuceI=qZecM1ZLOjR--iEih(w9mMm!QYDCzf_zZ^|nK3v0aOOr%!Fv-vYFuV8kn~@I
zi>tteA>U=1iX}eZrTp0AsH#IVV-u`ycb_HG+u74#kM7Dq5*OzP#ifpLMoy1wc1%C#
z-&t;m^q`Ki?ZrQ3YXjZlJ*BH{f^g2JHd6jXXt<(FosT!5y4ksnNng>!rDIf5zs+|7
z|H5mvQJTJ&dC#kr>6irH>G?yK+Hl^V!@L{1^;X}tgh529^0;|`u3{}`=xPSxY?8Y@
zBLFIM$Y`U7(i%#DsOE?1N)Bh+m!Yj*&O-56@unWPdiMDZT~;xw6H{xWipm~gJ%=s!
zbA|c46?_-jT0M*<Iy1>isy_c2)JePi4OX)~wx%2jxK<IjIL?^q#V^h`+%`@^Q)$~O
z=P?daKHFwBw>MP_+rg4s#lz2R!S=hHJftjD1_gC}#%7hF!ORBo1;@ggsJRmw=Y&SV
z%zZ>m86-cgGodsm%M2yW$7qrQQ_N?sD64F01}N%SpT2dH+!Fji)B~bOuQf!?HkcCl
zz`n4onT-v<d1kz=)~i-!n<E!o%bQ+5_mB~6GI8lOAuGFe+n^rx%bglYS3#VE)XkZs
za)D_RQPL*r7Y?tohG6e5Vmo<qW7P-=BOe&;HXe?2^^viiV(@EpnZQ3LXz=9(?IaZt
z5aHQ>+j{?g{aT^3;_y=<%6t9G3uN%x0($wUg&JOiMA8LOQcsuL%ZjAYraY5Tn$ou7
zy(0`skg#|lQdNx`L#)st(ijQ`3DRMYyJlaXwv`8?n{zkMw-={okNW1e`bQtfw}acK
z<eAmC*Xq$X&gE5iuWzrf2al((Plrx-)pJ{?>uYaMT^&zXuba(-)#Y<D@N?%c7fyFa
zGc(cg&2|KKomHJW0-ddIwU4rD{ObZ<Z9c>oo1-g(1PJ9vayq$ou6E*{o{)B3I_o~`
zCsv&9>cvq{li7B5s(W`FUA|i0zK1mK>Z>{eu`khjcD}ryY~G$5RK2tDtKLZU`tcbr
z+PmV8%E>1>?V33d?xOFqv)6w9^z~dx-|gV_@zlP5I5EW&@6r)?zI}>*%L(_5aqL=K
zTjhV5Yi(=0I@vXT-FbTHyQy~lJ|s{+eDguw{iIxPUAFAtr7bE~4}Y!8^V_Slhp+2f
z&DHtN!p!REXh%n1$HCg^%H7$TX{KEB$B&16JP75J#cc#-@m*@6nX<)~0?p+D1g#_2
zZ<(`pJ{?_ebkJ9F#ciGkA?0mzGKThhX|K<<X;r7EvaXZ2rAIG%YDY`2!y3*x9J0av
zQ0;vt3oAbEiw_NtUN29pGrntYTw1F>504*pJTF5IkFbxnXY}^U2XPJsoSrzgUX;(q
zU+_{T-%h>SWI+8jA0D%d+wxa41?&X)yverrWt`o-?42YUe?Gt7JH4IwK7e4H!A7-i
ze1ygCOg)Y+|1r9=Z|N%XILblVru*#&Fh)+7<>uOtiyy`r($5}G2Qy`^+u&9Rt;mlw
ziMYiVuWE<tbNpPjx_qpXPV+N*Rc5RnEc}?!QQTd%y%-g_TCR;#dZjz}U%xe&(xJ&1
z=&+&L*L1bACCbOW_TAztr;a*TB4w34eWH63*B^&HQGn(<5SS(oog!vPMEgX&W9-nf
z>mB^%Q!1vC(c?<TNvI6R^kj8*)q0m_%bQ~;xh}Rqv_RENoqQ(gQ5%xm^)pmKZgRM{
z#Ez`%;H)YuJAsAe{g$`N*Socjm%xyx4_28bm8|wkt)(Ipcn+H}QeyCJNEwF@LqiH;
zrtqme#+xyPB2~DGJO!U6j$-sMQ;lKYCZIkC+o<ladrD;(8=4C{ewVMFaFofSFKw!B
z=IF{?EpBDW;6(V6mDQ+xaBvy~fv?HPTv4l<NSDpbJTlZe(`r9dD8kQeyc^Tnwh$2e
zx$`Lw>F{uWu;qFyyz$Y5<R)#I=mW`W++3r==$G3@J&zy=RZY2A5>1ik4Wf_`s8nNN
z#Sb5$K6pDB8$yLO-bz(cS*4yj%Ufm+I^!j2Vsy-R9#D!G&XZYLh(GMdV3904@787x
znyf}lO@yWDCu#G%_}`}Q#~f027}DW|H;Q13HPkocW}@KHimK&Q?YH&r7l)MJMk!k?
z@EAYxIu136-!_6~^K1torLEN_Yp`pSA4j0Dl<?Q7E{&2G4NiDe2G+evOGjt&NMTHL
zku7{=!C|)cxKXJv@o>hoN_8<eq?-}YYUtR9rowcgIh>SUSw>JyEN+8jMc85Itchno
z+9%~Q34#kwTHzqs&uDB|*JD(qKY22h)~Q3M9ga+RF<W2cifEK(NUsNoyp>_l+Wuzj
zMeA9xK7VbrP6V(Zv>`H~!&dLfu7|TR!ARQ`35Rxe#I5Yo=}z8koJGt}Ps~Y`#|*6H
zI2N?85Q{HaTXrudIx>M}pc6}urD~PYw$->2n7&?hH_m1X@oeNTByQVIdix5yUFk?1
zhnU}=(Trc)zJ!%N3TzjNxi<EbZEG3Q&8QN1&7(4(K6dJB3)u=#J6C~=#8yla(xldi
z(-PKg;uf8X#^nIi`JXXQ64DIHvZw37wedAJ?wy=yxdmQRxAJS&g>^T=@#6@cg}1<+
zX8z?ag%v?}l~hLSZUpA`XB;7orfam(x8j};eAyfy^JA&<_T!kx-l$v<UR#9N82_ue
z+nQqD0E+nL=WMh4Qt+zsdSh9_99hB*Swg~SqS34{bb5^ws3sc4)XmB7r7W#IK>m5`
z-8qZ75l@PQ&MzY(jiJ~GjUW#vmWjxSTJSP$+#jO7v$hc3jiKJhac;oi@DRO+*I>Xv
zC*cPeIA;Xu6qc<xND<aLED_dAnOL!q7%|AXUw)Qs_?F->=F$&e8qFi)_ql=>_ShJQ
zDlml){|t{Id9z<pQdONfRSf2(^|9p1xCK$;n0Zll;j>IZvs@+UkTKlFbK$CjIwMrp
zf#3K!6yz5~#6OKR7?wo7B8>TQo3U|6#!Nj4e@b)zaWTx%-A*gAgUQ2+G$n1z$cnnP
zEUn!zwS2iNlw-?w<Qjlq#y9I$VzS>NAm0b3&)vERlkLr(yHOts!;cl9EoTNK(=~)=
zmG~2HSv^DwpU72v+TJW5i{4$^HVR?ffhQR!WqEA*n>^c2)QR9JuCkQSoF(sUcrCE2
zMReEK+M!mE#q#1nN*F2FQ%vF07D9(X%@Ce8z2wJO9(oJSmGS(JWkT1_Hc@RAML(H>
ze*QL(r+BVTmGyKwYt4qNB)XlP_~Z&~aEL^t1(!K!l!yW|Mtq()oAAzMUpTdb{N#=)
zlV5Rxi+=A|q%9DGZARfI=CKtIHg@1c(Flo1O?iwbwX$c)g*=UXO}&KY^B75^s_S#g
z>$1}4MPs;+Y~IT`%YFLi-D3u32PG_-?x%_Ii?JHTMH&c>)hf=$syUAHG`j|^qVAlZ
zx5*9XW^@TtT<SI0MQh#t=s>JfnNIT6fK?&YQS@yF9>w{>$(U^3nx!qW6-sWMI(eju
zckuj|af-2KEOs(#12E~+*gr9HM@tj5CLBu0g~ir=3(GL!>)!=#f~qkYaGGz0sp0NU
z1F~Y7m(dVS;^rf%u`zs15R#14mjDd7VjTN<V>YSCm7(%1WD-o|ty=d57}j$OPcjn>
z;HEK5WRe>yRY(sRzecR9?~&oxFmeI;pSgLSA1rFhS!L`QO_?EPp^|<TBu9m*BMc&m
zh=jsEz>i!HMp|&Pj;3hxBGicb(Xl{`s`$+T&x5I_Gj$n%4JRFGT0E==Bhv~X(uzdV
zn)aOJ2^^sV5)m1MtWZ_RNE}och{0;5Vcx10r7!mwjU-}GL?;dttcI>(Hv(o6)iu@{
zyIy&U!|I8_8h|nN$}&dXmZZ#J^uHl1PaGS<i+R5hP3Pb}6uD2tf?w{aF=qu*F|OV%
z9ecZo&f;yGV=TsK98w#AHId!@i{+4r#Wd=8K4R{Z={EdOr2bIkAbKmmvDh^LWUiH#
zdFy7m0)tVBl(DH_x=Vv06$viYph7={g=k0`LBn)x{?>uCanqU{lbHnbUE?Z*R3tv*
z0V8Mnh%vVg_9O7If|qlbt$io4<^C~D6sVAPM%D9aqyEQ9ON-j?oXe*UJ52?}qme&_
zWm3cNZRkJR;p;~LX_>->#d>Z40Ldv=Olb*=hWO57Bum59z^q<O+i)2Jh?v?l8R9|d
zb9pYIp+hKF)Z|T2zLgb8@1O<<viwjS-Nn~*Gp9l%4dwkEs-yBTxY#xVrBf;v`4&t0
zBtm>HU>f}NnsB)D)We)ja?tjYV^c5%%^B|Ir@6tQNgza6)+xe`3xLdHMvbj~aq6a&
zfHa01-oJri_9!6?Y#c#ds`dW))lM*#6%VVmAPNq0+`H!wqc%p|X3hYHHCFi0q7RHd
zY5@>)i1D=tI2J!>H`zF=v$c|GS&^~*3nw!!YjQwY<N1^#A!*=|Ff;D#eE^*ZFxHm&
z%G)>Rg7Rr;B`i>8Oc7?x-dG|{Q{zR})G`xhUe>FrpCYgbbl@P&|1$2QSVOrl8CFl0
z5AN{+7R}K991Qb47f8M7;%tgC1ceAl&(Qf_CSm49MocW-^1p1c?`-ToW0-}g1$(ks
zJR#38BH&owl8zFN)~*+dSiB6oxv8Oly&2U0r?#ODg|=;(pS^x!4#@O$#qlL{w7y-R
zso=0D?DGJ(a#-;PP4$B1yM0Pw;*5c=`J2}7<eyaBMKGR*_19XHa8X%yCSTkz<IBXI
zz@qsQn|aagAE_J)$&3})?&~)WYK^2n8Y#3U(0vH>9>FP-PsMj3%`(z8eP_1uL%l$P
z*D;t~eaU$ukjy#7On%1=v6#{0jvDWhOa@{wOA+9WK|090mm|Tyf8=>yz#l45GqJfO
zGm`jlROoal1<9=4gemU*BNr5lUefXtx)~fHPM_v^&cz>31yCIP@h?q`Z=5Zz&86OW
ztn~qr(EREUJi$Ck)Fl(#5t`SvrN|(ocHKrkgZme+^EK^wb4Pk8R65=URH%oIZ>VJ*
zs$03LIeyXR*>9Ho0hzCyoc9<N8+~>+8sp?~I*aqkwD%h$F$ilBBn0r9=X4jJz5Qbl
z=)ZVzmRx{q`GfH1Rlb%#K(Rj=_1ME30T|D2Tlc48BgziE`V)x=+VRBsaT_+i!SJiY
zKG@6Cfo~4$0X9{4{%M{&+ge{b0-Zu~_)*MrBFxJk%n3EP4|okFn!6&@p!}G<H+_Gi
zi2tvZ^4){C9MAFkec4RLfj2Ph&r#VCn(RNdR=g!MDqBcdU&cfn5q=xCw1FoururU3
z0H%RkR{+x>fGK|=|61ze^ozGdRs?!qu#}}qaz(I)A;LH>>)lkZh?GC!%dgyJk*}ee
zApzH;#!o!2RiAhiz|C$dLR%R_!b8ramT7DG5R*m-F~||Od;i511IG^MVDL9$0n*Om
zH{AG*IGH^<0^oePC&}orZW*QKoPKOP#sadikg(vG51`}l#<v(aNVZP>KTO8}6|<N~
z^A~7_&T(AmEwb)hLN$J;p+rdFZs*1yK~=EB_VQb>O>m;d)^E5z$j3ieLX5W^@7rID
z8V%D%DE3<FaNEFt;??+WkLY8i{%5i95-05w`pU5QyI8Q?N!DOZV#aMw{?w=h)Cvgr
z`WE9_zrDDJlm)ACzJ}ik-<RF$Svep=CxV3aL-*O4>ghU|I=y2AGp=Vv)eR^BkihDr
zF$URUn{nWP`U0pZtqd)HD@AYYzv{~u_FvVcB#R+(0XCdQ{b`%7n|UTfH5y1NGi-s)
z!!4$q=BKdqy#Li3f?|(3OG!$nI*H^B<Cu|f12J$R_QqdSKaWWfY_JjNDm6-n2nvS$
zE9YZ2|1KFZb5j@iIzrP1mI$*OEbI(wIht{W>+S^E1sC1B>!fpA7k+cR+x;H(Nx5Gl
z?IC3^E++-%S_qE2!TVTT2hPVba|0sp$5#2VNfUcELqbjQ(>%>La|;DWekF!lBE0u<
zhhOLfi0*#E|Lj<Myljhk>Je(wKghM`)5AVVg<LDrh<@yjSdTtBQ;?q%5!sV}fIshM
zH*z{x_&M7-FlGtafSY4;O5<StMZqyUcGQwNoxUG_I~7l*<W>`4hd)SG_R3GY5yzT*
zx%D7fB%F(kY};W>-nCx!9z8v${h!neA<v%!y3ft@^mg+CpKFOko=w<xqE7^0ag`&^
z%H{y&k8<Oz)vLSc8C=rOdjRGYOyt!I-7f+@({YD~&{tb)IQt1P^{0XP^G%~h+UotN
z<p{xw|1(#KDGPk8z<Z<Ft>-o+*J(GR7sHXmQ1^I2fq6M7es<mqi$V8*bJAKUYbo-2
zDdZD7-jsbF!vlA*u)sc~r>gY22){ik#FnmbzSp4n1Li)W4*o#nTIK;(@xxOj+Ljz+
zB#viAih!s2KJM2uKMD@G)Sa_#pJ?e%@IMA!;AFBh{QcxOFF!<W%ntsm`But)*}Ftd
zpT;1i`1bAOa?qnRbOToE)(Bp^DJLN!Nly6d?Q!3fgO=AvIwRCZqwgkNsm~c%FP082
zGLQ=(BZru%>6>At6_9e$;J+KTXB4HUNir^W6XqdnCuc2kjp&pyEcJOBbtAUXH1AR+
zTZI~OlMhz(sNQ0ewdCX^R+_3BC~z8A>X|mGzbm!-{PbRHpY>2kh4W1c>KA=ZZ&NsR
zBRCBd0KZH|pzcI~@mP&1=#+Z(vg<m%tjw%0J;<P~2{JQm2?I+ilRop`y+XZv+p#o3
zCKc|I0`js2#F~^jMEX%2^W!+Lz+sf2pj_(qO3@i%Z-vH^-LKucVBPL*mK!c|6}ePY
zxYTQaHvUXl0CPadvptawmB<6Pr5^p-SCLIC;E;dv6jrE3&OASheC{+^&)AAf=~pYs
znfIaQSB6dbaKhO@Ky&3n3m!0=_9vXNU=*z&wMKTGZWb+)Sa|zcX;Qv9Pnf_y<`q+l
zC4Mz;AvNUyr<R2S&}PDoe*8`OyuRnxCTw^~r=KHeS}8KH-2UwG>q&8}kV0`{H39sR
zKMB1v+WcgQG4MQ2h3A}1cZvz&yj|jn$fR_iVX)>@-5=}HrUwzD_#x*EL*5TaSmFCC
zic!0SLqDKYrzp6v3nur>TS^KiJ12`RKM@FU80^;*@Fc~FjR#d<$<yU9tScWFK^-{C
z)7_AG%a)r|e(9tXjgOM!&_M`9m08YdyOC!sm@GDLF_&B~aUinPt4ra<Vs38%VpDaz
z7PSQS){yzj??e1AevvDdYjCWzKthptrh-W`bM^5ke$U-XOYTQb4aI4Wx^<4ExWeVE
zRa8?)1EmttM4C=2hn*Zv7-F^G0OfRrM$_WoPU?vR&{zr!jAF|1X?`W(*G)FGa*~x(
zsVNNq7&;*oW}8e*iO_CMr(c>O*$!`Hr2PD+plerV+H1Tu?<=M)Tnu1#a50Q?qw#t8
z^HAtv(zqQ(;Lm7(cxsLvH*}O#R9b5xm0`V4*E4m<lpIzZhotnj5n1n^TXtHk#f$ll
zPR9v$E&sl&S0SK=c3c~&Xbtx|-K3oO>mS_MlJ>x5mF^dwDRek3j(SM20FDG55Afaf
zv#Lc#tJTuAX%AsQgY}q-w#KV=A*GtT8pl9ceE-^juaX>CLxrNm7=LjgDD`}q;g!as
zxj!n$;XWR3B=XI;V0v!VOFx{0crX$P`Omt7zP?#AB~mE}?5j00HYNVL%1Wc&lWlAj
z(}fS<&du%9Z3XpSq@ApfT$&+o<F8vL^tB#B^wp4gFshCb07MAg<==ub&G>@jhI2}`
zpKQY$7>Ne=i5LRwI(pRJS!A%oLG5uika?&vkz~r}#A`ql5=;B+GghryUn-f1eT?VM
zpKZb)1R`I0Y?29c+Ylb>$ak;#t<kb)-^h_W^idnG`~%+oC!6~Yoq-TpFAbZRp0%c2
zP|r%4K|(X#jqhp=8+-!4H-JluPS(#h6!Xw=OggKmZ>Z0b%%&UPlSk37s4?)kFA`UN
zEg1}q)JO286M4%{+M<X?cOH`m(dAUcQL^`OiOvV2tp8~k1&TR;D(V)M4~kW01X86W
zw8Ld^eqIV-Q^k2lL9dY1=u6|f7&rNvWh5glHh+yjlBPeDHhAcz$EgGJe%i9q`ZQQ@
zFk*`aPNN==`k`)jhDp(B|2xLD6ZE!LieoPyM(}_K$x}Sl13p>XDd6`6$yP|_gIexn
zQSuJm^cxWJ=7fq|vK5wL^_~J_ff&i`ir7Pd@j`$Cqy?9GzgtHpk~M60SWnR@pUq5V
z5-a)p%ysbl%+=~by|)wEfe?88RUbUQBDqr<+SA+h*QiOv5}R~k%YsxZY1TdU^{+6y
zirrKlhQh5Abr`TEE`&M!-^Ui?J;ju!uaH*XJjQ-eVk%N&Dx~!(55(|?9Onj)7nEt@
zr-3L;4wx}n^P-e<Jqok=n&(=&0}!s=OK#<VZ{MB7N+LA1&(w1vPahvMr8t^lRHp_#
zz`ZlN{ZRDixt)HM18RqvKAiXMcePJRmRX%8O@5sfMb}J0*MO*G*}(04?{B<C^LEj$
z!Nbx>24EgZ6$0}oDJ)y|r^2essJy*ROdvd!mr(SmEYzFCLvl3*_1tD+4_Ks1KTz$&
z+5g;Z1Z-1qNQI(xnlH4MyVv&2(sk82TtmA~&gmTm`u&tQOSq~m@yA0x86W2ocK3x+
zVqadiQWJ3V+&cy>e=YNlzbfERg|YHf4p=q9RZ2O=Ub};j3ythiN<07x;jt2b1-nx~
zh2<y5`}?mvLP>FC<EP5Z>9FZzE&D^qUy|}dL>2^mw|;9OTK_rr(jDAaXe87}zfns+
zVo6<*pA+X!9SL>^QZqahLx(nDE}^TWKtRQGWvt-j0mU&^z;&i@HblD?JxbtD_w`*R
zcGf+t{6;QuCbZGIOpx&rqMY@J)yTdqgGr`KmyzA60-%kyUD$)=-FJK%DamP{gH=UU
zmglIGT}7)I$}cB=Tkt;uj7<I{%J3yC%K`p2+7`XUjgxcnPOU_F)W9v?uL?D3!?{k2
zf~yL%iKsF2cEpZrjjplr?^Q9$IYry`I0raREl18m$`yOE=~sLsq~8~L*J||nMuuqK
zUg&_nU26XB55Sc}#HnCoeFYBDo*mgieI=NkA6bhIa2&XOJR|YH&(f8YD5#(J%6}W0
zOKe!4?D0#Rrfz0zSkADa*E)39?0Xc;QoTjDaGpY2M@y-CKRMFn#LW|HUBhSwS|jn*
zZ(E>Mcrkx}0dk;^z)_{Qn*L_gJXDs2Op_v6*Ot)7;=zu^aJz{Vu79poGYZu9_f?Km
zMGiA~_X=jN4j;J`DQ47EWDnvvW<^ba#`1Cfa89ztXiDyQ)ZpGVtxaBNgU}LhF~s8E
z_b*z8WHwqO@OY3*L_ILe>e2jCDQ5E(p$)ZbQ$*nj{rT0ASj)#mpDOm&58R6QUB7^M
zd@8)p_1{p*QTzQuDlAdimP*M9*Ek%Ero_18`k*OU@vN10dQ>BkdE24-$X+2F)=7Hc
zfaIwuF#&hzHQ18hyTJ03b(2UAO|{B<k=GI=E7tl1iw9`|&_Grrx)Z3lPl<6m+L46Z
zxG6g0iVo(rw_V<(zFE=XOV`b%ux9#YvJ|y1e3^I8fQSun;<F9ax=41s!;@?e%&U6!
zh8%!biDYNW*-XzXBA|<LQ>pa=V=wslq2XuFPsP@|N@bacQ4V=P@A?$*HFOz-`e8+}
zlfvfQW=*grKwzHc9tG}U>!$?Q>(8zI-vBDxmk^56$Id4>JGE(hlY4#*1%TbbvKr9$
z-b^vHe)gs(DwJ+QE`?~#sj{t49>bg{)lTXZqB+&8S(_>+Dl4)w)Jq>;Yf%&F#fj8L
zmOG})oArXk^Mn6(S@gRwdF&_uv;_7SW&XlFE|+DF4>?TO6D~xhfl4aRNLn*^Je=hH
zHOkH(0hLlYL!!-(t<#?m1=b2SAWb{n;V_5B&gLZdw<qE)W5?XXx^7VF2Qv<H5S+p}
z%&-EpKaQo4drq(vO@`<)CNV1_uHd)n82PRk2At$FGaXHG>_C|KDRI$1K#0H^7qB}(
z>Uk(-Iyp-E|2B{=Ct%%jlAr1FS3UoX?wb=v7PtTdlahC>S>fxI;f>iG{#nm-@yv#Q
zbnOe9nDW>UJ1|`*LRAy<rxetJa4Z-{RCG#Og%;slv0R~Clb!~-S|sg!Z#R-;ewh&2
z)UXIQMNxAC;Bnn<Y28`VypoxH6EMXscNxo%z-&^IUrYN^u$90qrQPN~ywBeN^Vn&)
z#h4)^dHme|`G*(RdJ6Lrl1o`??<WXs4?|hRl3W!eY|U=wN+zZ~)Y+-Lk|;$H&lv3G
zz}YE~Lnnz3bUC{=B|R#E*tqyj;{Mp$)$(U5{@6bS1l3Q_w8$;aEuWP>OlT3TY?w9+
zf2azd+5ky|Xolp{{AO-XRY}O!0$JJvPK(`cZjJ_!lw%<bZuy4_xwT_Z_UvB^!Qt+x
zuKV1)`yt%Mq+VT-rkuE;&aWs@M$GS9BPDv}v5=(+f+7v9dP5!geJM}5U?p6aNd!n^
zoo=qGs=sC{%Gk5QF?$HPQJoIxr#cOA>;USR%J(53E$?rw@_U?s8I^yi(9>2ALxK-D
z2*l{6kYU9qt=?#!l_#vehH)<h`7dJ*dVmJU7G9JD_fu~%Efwws;RA#IW*6kJug=vM
z6|^B=H)Rm;OM<9b1;V$@N+Hytx6|;8b^bWMZ2<z|#8=OlXN;Qj^}y{e`sHok+JJJw
z=RRmsnC}9-m;oRc)oMe&U0M~>NWvG-mws=V{3n~RZ=mOS)m#>NZyG3TGBRn{@Bxg2
zG_a^il-jxS`BOPlb@G?lYl4eIzVOKhE7;spu8E{-XrynV^#CaZ@#Oc_AP)##36X$V
zoSZV|%_I0(&HwofZ0k*I^Sq&qbE@D>#qSND^bMT$`Ht|R+G-vSpgxH@;*f8oz7XLX
zQvkUCGXnAACz8b<l8>6>@^8uV)xQn!3w~#F{z3Nk863j@Q2-)=Q2uR!X8WCpc@q-U
zun=s`dP9yv`!}N@jJCS~#tyg>BEDhn`3t@pWk7;F5PWwJbHIN)dSLL63xVBJQIq7N
zihIk`xIYuR)MFd+1$Y(h%fHR$&*g%zt^rtY*#4D!0(+*T5C5qTQyHlL^I!=)*d;+e
z_q!2?f`o5@B~{ZUwtR17el+(0BMJI_fhAszo&lnxF9@Kv1qOTp8e_fz^ntw4E4*0u
zcoo0UQwuwKQ+Q5hi?|`!5}1w&4t^fIM*zTX3B1F;y~EyDPv6^pc$+Mf6=*H<M??Ao
zj0?351Yu7Y1L_eB!3ZFxfChl7Fh+oRr-5wgKzO`yy1_R@6NPZQf$y0tEP+6KajR+N
z)${Cwg}(|13XcX{=z+F0LKS3_9Kz!mfTXJeyW#uKQYt88_{~yc&iM;|4N$;?`Y)uA
zvUnFqM^BlHs`H~sb&*)C`iJ6gKm}r9!X1FQM;-yp5*6-7Fz4S%XyJ})7KwD)o6Jre
zD&%g9{Fpa|5)8j>fe;VE_Ye_-0T5FX?;O}vDLlvEEQ;)KH`5rs)3si;vycD}27A1F
zu;kr?x%g1u-x&cbdgw3s44I4XjbOp@nlE2n{+-?#i`I06ayHP8d7K*HHh^?MNX@=4
z5diyA0P1Fcls)|&PKRvbjdFH0t!1`v!Fk9RPvoyM@0foC5d?W0Gz+q015{m5`Slzv
z+)<%%50L&`0RCHve`f$F!B<z4`u~2ES48MPmHzv@P)TxUK=*TWX!9ehnt?JT$Wl1K
zuf{ZD&V(_Q9>Keok%u0+8RZ8g890j`3eJ!0OXz+C@kIlcgku*YAi-oXYLv5-tdtG3
znANPRT7mu+qS<&iH1a@kZwl(@?=CfYS1Re<3Uvs8WCJXyZC}KsLOaK*b<p8*$|@Ma
zOPDQyb7&&V1qrJet3dqQds|?@E~&qi?+*u!w}<ByR>jqU#;ak{`3veAG=Kr>kXlK#
zA%M71iA?h7xmNj_G{0Z|T?G{soX|a(2@z@=Z9tGPMhz3xUr^fs4h-Zo+IPWg>|IlB
zQOSxb<iSMQt9qEVTheOAI$(gXAqcQb7!n-Bp>o1HEGy%Bd^LskX_a5?y|btm=9VB}
zX>>O*?!gx@@31rgSfTbf-PWJxO<(e2s*v~4#E1%jbq!EK)BqL;zgqwU0ENkmsTCtS
z`i$0(4p>>5NID77_TEL1Du7a2egG@1fkE8SzN2q_HH1y0%j@d_Dp&%^M?^H&1^|J$
z2P;4UgozOWg!OFddpx+re+j#0YXUOR^{){$2<t_IVT1VqLkGL#mAQ7iI;0v2T2gb1
zjyR;+A>3q$3j|og&p=SdR)~;OSM}*j;pIHMUQ#E3kN<~ncMJ}#Y1&5PWG6eeZQHh;
z?AW$#+qP}nwr$(i+4ucD?^n;Mde8Z_*6Qi*x%%p^nKf0@f74oh{Wq<x?E!qvU=<&R
z1xsHB!tb--w{%d|avl1?z#!+qt;PX-UH~hX+H_vJ1<V<iLrG{L=Bk=u{JGBm^$M-B
zA67jWa&ajlhP$o|T93S<`geX!9ez9wJ1<Z_OXy`)cQ~E*3-{*z@?Wxd3018V;C_}v
z%7`HK$g0wCqszKWQnZ_QT(#L%ttbk5so=KMfs}vY1^ojL#s4on3;eFp`n0On{yq)5
z#p>36KfdOD$bZU{66<elwf)kLK^iq$c3b)Vv(>HEeaL?yQ2zs=g%3|7z$qfzVW(7U
zuk97xs~*S_RL@WKzjlmiwU2h|s-^0}ng;-g2S||rnEqvNza1244Wm-ypK%k)Y7M17
zAAgyw(9Uxna)SDg-m>o2`iheUx5htn>r!4b??JAGdr1H5;4g7ie~IH;sd};;a*FV7
z!1?=ts{R|3^*{LkdT+9*wRYmI+xD?E{2ve18n!`}|1baN-ZGwu|39Og9{=B?{yGoZ
zHL$zw!a;q1$=Lmi?E>YW#B2OzwyzzuN44uO<<|0gwSNs-{}b`QD*poe=-|i2^U{Li
zOI5}D@0D4A-NcF4vLozYQ!CZ~A=+*W$j@?#^8eVbwuk-4^UGgU>;C{M)%sThdYSt5
z*ILs%<(VLEuhT!Zw(kw~x0E(*{P?cIFH~q#d209CL3JY2mGR_!{t4%AnYHlc{>!@g
z%0D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
b!v5={i=qqyBDjVc_)i2V2MagBTR{H@UD=J~

